{
  "cmp": {
    "buttongroup": {
      "container": {
        "itemspacing": {
          "xs": {
            "value": "{core.dimensionpx.4}",
            "type": "spacing"
          },
          "sm": {
            "value": "{core.dimensionpx.4}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing"
          },
          "xl": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing"
          }
        }
      }
    },
    "formcaption": {
      "container": {
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionrem.2}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionrem.2}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionrem.2}",
            "type": "spacing"
          }
        },
        "padding_h": {
          "sm": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing"
          }
        },
        "padding_v": {
          "sm": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing"
          }
        },
        "padding": {
          "sm": {
            "value": "{cmp.formcaption.container.padding_v.sm} {cmp.formcaption.container.padding_h.sm}",
            "type": "spacing"
          },
          "md": {
            "value": "{cmp.formcaption.container.padding_v.md} {cmp.formcaption.container.padding_h.md}",
            "type": "spacing"
          },
          "lg": {
            "value": "{cmp.formcaption.container.padding_v.lg} {cmp.formcaption.container.padding_h.lg}",
            "type": "spacing"
          }
        }
      },
      "iconwrapper": {
        "paddingtop": {
          "sm": {
            "value": "{core.dimensionrem.1}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionrem.0,5}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionrem.5}",
            "type": "spacing"
          }
        }
      },
      "icon": {
        "iconsize": {
          "sm": {
            "value": "{core.dimensionrem.14}",
            "type": "sizing",
            "description": "defines the physical size of the icon inside the formcaption"
          },
          "md": {
            "value": "{core.dimensionrem.16}",
            "type": "sizing"
          },
          "lg": {
            "value": "{core.dimensionrem.16}",
            "type": "sizing"
          }
        }
      },
      "textwrapper": {
        "padding_h": {
          "sm": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing"
          }
        },
        "padding_v": {
          "sm": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing"
          }
        },
        "padding": {
          "sm": {
            "value": "{cmp.formcaption.textwrapper.padding_v.sm} {cmp.formcaption.textwrapper.padding_h.sm}",
            "type": "spacing"
          },
          "md": {
            "value": "{cmp.formcaption.textwrapper.padding_v.md} {cmp.formcaption.textwrapper.padding_h.md}",
            "type": "spacing"
          },
          "lg": {
            "value": "{cmp.formcaption.textwrapper.padding_v.lg} {cmp.formcaption.textwrapper.padding_h.lg}",
            "type": "spacing"
          }
        }
      }
    },
    "captiongroup": {
      "container": {
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionrem.4}",
            "type": "spacing",
            "description": "defines the gap between hint and error message"
          },
          "md": {
            "value": "{core.dimensionrem.5}",
            "type": "spacing",
            "description": "defines the gap between hint and error message"
          },
          "lg": {
            "value": "{core.dimensionrem.6}",
            "type": "spacing",
            "description": "defines the gap between hint and error message"
          }
        }
      }
    },
    "checkbox": {
      "contentcol": {
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing",
            "description": "controls the vertical spacing between inlinelabel and the caption."
          },
          "md": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing",
            "description": "controls the vertical spacing between inlinelabel and the caption."
          },
          "lg": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing",
            "description": "controls the vertical spacing between inlinelabel and the caption."
          }
        },
        "paddingtop": {
          "sm": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing",
            "description": "can be used to verticaly align the content of the textcontainer against the control"
          },
          "md": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing",
            "description": "can be used to verticaly align the content of the textcontainer against the control"
          },
          "lg": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing",
            "description": "can be used to verticaly align the content of the textcontainer against the control"
          }
        }
      },
      "contentrow": {
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing",
            "description": "controls the horizontal spacing between the control and the label"
          },
          "md": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing",
            "description": "controls the horizontal spacing between the control and the label"
          },
          "lg": {
            "value": "{core.dimensionpx.12}",
            "type": "spacing",
            "description": "controls the horizontal spacing between the control and the label"
          }
        }
      },
      "controlwrapper": {
        "paddingtop": {
          "sm": {
            "value": "0",
            "type": "spacing",
            "description": "can be used to align the checkbox control against the text"
          },
          "md": {
            "value": "{core.dimensionrem.4}",
            "type": "spacing",
            "description": "can be used to align the checkbox control against the text"
          },
          "lg": {
            "value": "{core.dimensionrem.2}",
            "type": "spacing",
            "description": "can be used to align the checkbox control against the text"
          }
        }
      },
      "control": {
        "container": {
          "borderwidth": {
            "sm": {
              "active": {
                "rest": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "hover": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "pressed": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "focus": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "disabled": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "readonly": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "error": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{core.dimensionpx.1}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "hover": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "pressed": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "focus": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "disabled": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "readonly": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "error": {
                  "value": "{cmp.checkbox.control.container.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                }
              }
            },
            "md": {
              "active": {
                "rest": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "hover": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "pressed": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "focus": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "disabled": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "readonly": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "error": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{core.dimensionpx.1}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "hover": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "pressed": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "focus": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "disabled": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "readonly": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "error": {
                  "value": "{cmp.checkbox.control.container.borderwidth.md.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                }
              }
            },
            "lg": {
              "active": {
                "rest": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "hover": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "pressed": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "focus": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "disabled": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "readonly": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "error": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{core.dimensionpx.1}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "hover": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "pressed": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "focus": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "disabled": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "readonly": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                },
                "error": {
                  "value": "{cmp.checkbox.control.container.borderwidth.lg.inactive.rest}",
                  "type": "borderWidth",
                  "description": "figma only! do not apply on codes comps"
                }
              }
            }
          },
          "borderradius": {
            "sm": {
              "value": "{sys.borderradius.sm}",
              "type": "borderRadius"
            },
            "md": {
              "value": "{cmp.checkbox.control.container.borderradius.sm}",
              "type": "borderRadius"
            },
            "lg": {
              "value": "{cmp.checkbox.control.container.borderradius.sm}",
              "type": "borderRadius"
            }
          },
          "size": {
            "sm": {
              "value": "{core.dimensionpx.16}",
              "type": "sizing"
            },
            "md": {
              "value": "{core.dimensionpx.16}",
              "type": "sizing"
            },
            "lg": {
              "value": "{core.dimensionpx.20}",
              "type": "sizing"
            }
          }
        },
        "icon": {
          "iconsize": {
            "sm": {
              "rest": {
                "value": "{core.dimensionpx.16}",
                "type": "sizing"
              },
              "hover": {
                "value": "{cmp.checkbox.control.icon.iconsize.sm.rest}",
                "type": "sizing"
              },
              "pressed": {
                "value": "{cmp.checkbox.control.icon.iconsize.sm.rest}",
                "type": "sizing"
              },
              "focus": {
                "value": "{cmp.checkbox.control.icon.iconsize.sm.rest}",
                "type": "sizing"
              },
              "disabled": {
                "value": "{cmp.checkbox.control.icon.iconsize.sm.rest}",
                "type": "sizing"
              },
              "readonly": {
                "value": "{cmp.checkbox.control.icon.iconsize.sm.rest}",
                "type": "sizing"
              },
              "error": {
                "value": "{cmp.checkbox.control.icon.iconsize.sm.rest}",
                "type": "sizing"
              }
            },
            "md": {
              "rest": {
                "value": "{core.dimensionpx.16}",
                "type": "sizing"
              },
              "hover": {
                "value": "{cmp.checkbox.control.icon.iconsize.md.rest}",
                "type": "sizing"
              },
              "pressed": {
                "value": "{cmp.checkbox.control.icon.iconsize.md.rest}",
                "type": "sizing"
              },
              "focus": {
                "value": "{cmp.checkbox.control.icon.iconsize.md.rest}",
                "type": "sizing"
              },
              "disabled": {
                "value": "{cmp.checkbox.control.icon.iconsize.md.rest}",
                "type": "sizing"
              },
              "readonly": {
                "value": "{cmp.checkbox.control.icon.iconsize.md.rest}",
                "type": "sizing"
              },
              "error": {
                "value": "{cmp.checkbox.control.icon.iconsize.md.rest}",
                "type": "sizing"
              }
            },
            "lg": {
              "rest": {
                "value": "{core.dimensionpx.20}",
                "type": "sizing"
              },
              "hover": {
                "value": "{cmp.checkbox.control.icon.iconsize.lg.rest}",
                "type": "sizing"
              },
              "pressed": {
                "value": "{cmp.checkbox.control.icon.iconsize.lg.rest}",
                "type": "sizing"
              },
              "focus": {
                "value": "{cmp.checkbox.control.icon.iconsize.lg.rest}",
                "type": "sizing"
              },
              "disabled": {
                "value": "{cmp.checkbox.control.icon.iconsize.lg.rest}",
                "type": "sizing"
              },
              "readonly": {
                "value": "{cmp.checkbox.control.icon.iconsize.lg.rest}",
                "type": "sizing"
              },
              "error": {
                "value": "{cmp.checkbox.control.icon.iconsize.lg.rest}",
                "type": "sizing"
              }
            }
          }
        }
      }
    },
    "counter": {
      "container": {
        "padding_v": {
          "sm": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing",
            "description": "figma only! do not apply on codes comps. use <padding> instead"
          },
          "md": {
            "value": "{cmp.counter.container.padding_v.sm}",
            "type": "spacing",
            "description": "figma only! do not apply on codes comps. use <padding> instead"
          },
          "lg": {
            "value": "{cmp.counter.container.padding_v.sm}",
            "type": "spacing",
            "description": "figma only! do not apply on codes comps. use <padding> instead"
          }
        },
        "padding_h": {
          "sm": {
            "value": "{core.dimensionpx.4}",
            "type": "spacing",
            "description": "figma only! do not apply on codes comps. use <padding> instead"
          },
          "md": {
            "value": "{cmp.counter.container.padding_h.sm}",
            "type": "spacing",
            "description": "figma only! do not apply on codes comps. use <padding> instead"
          },
          "lg": {
            "value": "{cmp.counter.container.padding_h.sm}",
            "type": "spacing",
            "description": "figma only! do not apply on codes comps. use <padding> instead"
          }
        },
        "padding": {
          "sm": {
            "value": "{cmp.counter.container.padding_v.sm} {cmp.counter.container.padding_h.sm}",
            "type": "spacing",
            "description": "coded comps only!"
          },
          "md": {
            "value": "{cmp.counter.container.padding_v.md} {cmp.counter.container.padding_h.md}",
            "type": "spacing",
            "description": "coded comps only!"
          },
          "lg": {
            "value": "{cmp.counter.container.padding_v.lg} {cmp.counter.container.padding_h.lg}",
            "type": "spacing",
            "description": "coded comps only!"
          }
        },
        "borderradius": {
          "sm": {
            "value": "{sys.borderradius.md}",
            "type": "borderRadius",
            "description": "border radius of counter container\n>>> new"
          },
          "md": {
            "value": "{sys.borderradius.md}",
            "type": "borderRadius",
            "description": "border radius of counter container\n>>> feedback.counter.borderradius"
          },
          "lg": {
            "value": "{sys.borderradius.md}",
            "type": "borderRadius",
            "description": "border radius of counter container\n>>> new"
          }
        },
        "borderwidth": {
          "sm": {
            "value": "{sys.borderwidth.medium}",
            "type": "borderWidth"
          },
          "md": {
            "value": "{sys.borderwidth.medium}",
            "type": "borderWidth"
          },
          "lg": {
            "value": "{sys.borderwidth.medium}",
            "type": "borderWidth"
          }
        },
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionpx.2}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionpx.2}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionpx.2}",
            "type": "spacing"
          }
        }
      }
    },
    "dialog": {
      "container": {
        "maxwidth": {
          "xs": {
            "value": "400px",
            "type": "sizing"
          },
          "sm": {
            "value": "600px",
            "type": "sizing"
          },
          "md": {
            "value": "900px",
            "type": "sizing"
          },
          "lg": {
            "value": "1200px",
            "type": "sizing"
          },
          "xl": {
            "value": "1556px",
            "type": "sizing"
          }
        },
        "padding": {
          "xs": {
            "value": "{core.dimensionpx.64}",
            "type": "spacing",
            "description": "Defines the margin of Dialog Combined"
          },
          "sm": {
            "value": "{core.dimensionpx.64}",
            "type": "spacing",
            "description": "Defines the margin of Dialog Combined"
          },
          "md": {
            "value": "{core.dimensionpx.64}",
            "type": "spacing",
            "description": "Defines the margin of Dialog Combined"
          },
          "lg": {
            "value": "{core.dimensionpx.64}",
            "type": "spacing",
            "description": "Defines the margin of Dialog Combined"
          },
          "xl": {
            "value": "{core.dimensionpx.64}",
            "type": "spacing",
            "description": "Defines the margin of Dialog Combined"
          }
        },
        "borderradius": {
          "value": "{sys.borderradius.lg}",
          "type": "borderRadius"
        }
      },
      "contentsection": {
        "container": {
          "padding": {
            "value": "{cmp.dialog.contentsection.container.padding_v} {cmp.dialog.contentsection.container.padding_h}",
            "type": "spacing"
          },
          "padding_h": {
            "value": "{core.dimensionpx.16}",
            "type": "spacing"
          },
          "padding_v": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing"
          }
        }
      },
      "headersection": {
        "container": {
          "padding": {
            "value": "{cmp.dialog.headersection.container.padding_v} {cmp.dialog.headersection.container.padding_h}",
            "type": "spacing"
          },
          "padding_h": {
            "value": "{core.dimensionpx.16}",
            "type": "spacing"
          },
          "padding_v": {
            "value": "{core.dimensionpx.16}",
            "type": "spacing"
          }
        }
      },
      "footersection": {
        "container": {
          "padding": {
            "value": "{cmp.dialog.footersection.container.padding_v} {cmp.dialog.footersection.container.padding_h}",
            "type": "spacing"
          },
          "padding_h": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing"
          },
          "padding_v": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing"
          }
        }
      }
    },
    "divider": {
      "container": {
        "horizontal": {
          "height": {
            "value": "{core.dimensionpx.1}",
            "type": "sizing",
            "description": "the thickness of the divider\n>>> new"
          }
        },
        "vertical": {
          "width": {
            "value": "{cmp.divider.container.horizontal.height}",
            "type": "sizing",
            "description": "the thickness of the divider\n>>> new"
          }
        }
      }
    },
    "formlabel": {
      "container": {
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionpx.4}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionpx.4}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionpx.4}",
            "type": "spacing"
          }
        },
        "padding": {
          "sm": {
            "value": "0",
            "type": "spacing"
          },
          "md": {
            "value": "0",
            "type": "spacing"
          },
          "lg": {
            "value": "0",
            "type": "spacing"
          }
        }
      }
    },
    "icon": {
      "container": {
        "size": {
          "xxs": {
            "value": "{core.dimensionrem.8}",
            "type": "sizing",
            "description": "size of xxs icon\n>>>: ui.icon.xxs"
          },
          "xs": {
            "value": "{core.dimensionrem.12}",
            "type": "sizing",
            "description": "size of xs icon\n>>> ui.icon.xs"
          },
          "sm": {
            "value": "{core.dimensionrem.16}",
            "type": "sizing",
            "description": "size of sm icon\n>>> ui.icon.sm\n"
          },
          "md": {
            "value": "{core.dimensionrem.24}",
            "type": "sizing",
            "description": "size of md icon\n>>> ui.icon.md"
          },
          "lg": {
            "value": "{core.dimensionrem.32}",
            "type": "sizing",
            "description": "size of lg icon\n>>> ui.icon.lg"
          },
          "xl": {
            "value": "{core.dimensionrem.48}",
            "type": "sizing",
            "description": "size of xl icon\n>>> ui.icon.xl"
          }
        }
      }
    },
    "buttonicon": {
      "container": {
        "padding": {
          "xs": {
            "value": "{core.dimensionrem.6}",
            "type": "spacing"
          },
          "sm": {
            "value": "{core.dimensionrem.6}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing"
          },
          "xl": {
            "value": "{core.dimensionrem.12}",
            "type": "spacing"
          }
        },
        "itemspacing": {
          "xs": {
            "value": "0",
            "type": "spacing"
          },
          "sm": {
            "value": "0",
            "type": "spacing"
          },
          "md": {
            "value": "0",
            "type": "spacing"
          },
          "lg": {
            "value": "0",
            "type": "spacing"
          },
          "xl": {
            "value": "0",
            "type": "spacing"
          }
        },
        "borderradius": {
          "xs": {
            "value": "{sem.buttons.container.borderradius.xs}",
            "type": "borderRadius"
          },
          "sm": {
            "value": "{sem.buttons.container.borderradius.sm}",
            "type": "borderRadius"
          },
          "md": {
            "value": "{sem.buttons.container.borderradius.md}",
            "type": "borderRadius"
          },
          "lg": {
            "value": "{sem.buttons.container.borderradius.lg}",
            "type": "borderRadius"
          },
          "xl": {
            "value": "{sem.buttons.container.borderradius.xl}",
            "type": "borderRadius"
          }
        }
      }
    },
    "icondropdown": {
      "container": {
        "paddingtop": {
          "xs": {
            "value": "{core.dimensionrem.6}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "sm": {
            "value": "{core.dimensionrem.6}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "lg": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "xl": {
            "value": "{core.dimensionrem.12}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          }
        },
        "paddingright": {
          "xs": {
            "value": "{core.dimensionrem.1}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "sm": {
            "value": "{core.dimensionrem.1}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "md": {
            "value": "{core.dimensionrem.1}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "lg": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "xl": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          }
        },
        "paddingbottom": {
          "xs": {
            "value": "{core.dimensionrem.6}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "sm": {
            "value": "{core.dimensionrem.6}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "lg": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "xl": {
            "value": "{core.dimensionrem.12}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          }
        },
        "paddingleft": {
          "xs": {
            "value": "{core.dimensionrem.3}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "sm": {
            "value": "{core.dimensionrem.3}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "md": {
            "value": "{core.dimensionrem.3}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "lg": {
            "value": "{core.dimensionrem.2}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "xl": {
            "value": "{core.dimensionrem.4}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          }
        },
        "padding": {
          "xs": {
            "value": "{cmp.icondropdown.container.paddingtop.xs} {cmp.icondropdown.container.paddingright.xs} {cmp.icondropdown.container.paddingbottom.xs} {cmp.icondropdown.container.paddingleft.xs}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "sm": {
            "value": "{cmp.icondropdown.container.paddingtop.sm} {cmp.icondropdown.container.paddingright.sm} {cmp.icondropdown.container.paddingbottom.sm} {cmp.icondropdown.container.paddingleft.sm}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "md": {
            "value": "{cmp.icondropdown.container.paddingtop.md} {cmp.icondropdown.container.paddingright.md} {cmp.icondropdown.container.paddingbottom.md} {cmp.icondropdown.container.paddingleft.md}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "lg": {
            "value": "{cmp.icondropdown.container.paddingtop.lg} {cmp.icondropdown.container.paddingright.lg} {cmp.icondropdown.container.paddingbottom.lg} {cmp.icondropdown.container.paddingleft.lg}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "xl": {
            "value": "{cmp.icondropdown.container.paddingtop.xl} {cmp.icondropdown.container.paddingright.xl} {cmp.icondropdown.container.paddingbottom.xl} {cmp.icondropdown.container.paddingleft.xl}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          }
        },
        "itemspacing": {
          "xs": {
            "value": "0",
            "type": "spacing"
          },
          "sm": {
            "value": "0",
            "type": "spacing"
          },
          "md": {
            "value": "0",
            "type": "spacing"
          },
          "lg": {
            "value": "-{core.dimensionrem.2}",
            "type": "spacing"
          },
          "xl": {
            "value": "-{core.dimensionrem.4}",
            "type": "spacing"
          }
        },
        "borderradius": {
          "xs": {
            "value": "{sem.buttons.container.borderradius.xs}",
            "type": "borderRadius"
          },
          "sm": {
            "value": "{sem.buttons.container.borderradius.sm}",
            "type": "borderRadius"
          },
          "md": {
            "value": "{sem.buttons.container.borderradius.md}",
            "type": "borderRadius"
          },
          "lg": {
            "value": "{sem.buttons.container.borderradius.lg}",
            "type": "borderRadius"
          },
          "xl": {
            "value": "{sem.buttons.container.borderradius.xl}",
            "type": "borderRadius"
          }
        }
      }
    },
    "loader": {
      "container": {
        "size": {
          "sm": {
            "value": "{core.dimensionrem.16}",
            "type": "sizing"
          },
          "md": {
            "value": "{core.dimensionrem.24}",
            "type": "sizing"
          },
          "lg": {
            "value": "{core.dimensionrem.32}",
            "type": "sizing"
          }
        },
        "padding": {
          "sm": {
            "value": "{core.dimensionrem.1}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionrem.2}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionrem.3}",
            "type": "spacing"
          }
        }
      },
      "background": {
        "borderwidth": {
          "sm": {
            "value": "{core.dimensionpx.2}",
            "type": "borderWidth"
          },
          "md": {
            "value": "{core.dimensionpx.2}",
            "type": "borderWidth"
          },
          "lg": {
            "value": "{core.dimensionpx.3}",
            "type": "borderWidth"
          }
        }
      },
      "foreground": {
        "borderwidth": {
          "sm": {
            "value": "{core.dimensionpx.2}",
            "type": "borderWidth"
          },
          "md": {
            "value": "{core.dimensionpx.2}",
            "type": "borderWidth"
          },
          "lg": {
            "value": "{core.dimensionpx.3}",
            "type": "borderWidth"
          }
        }
      }
    },
    "menu": {
      "container": {
        "borderradius": {
          "value": "{sys.borderradius.lg}",
          "type": "borderRadius",
          "description": "defines the border radius of the whole menu component"
        }
      },
      "menuitem": {
        "itemcontainer": {
          "padding": {
            "value": "{cmp.menu.menuitem.itemcontainer.padding_v} {cmp.menu.menuitem.itemcontainer.padding_h}",
            "type": "spacing",
            "description": "adds padding to the menu item"
          },
          "borderradius": {
            "value": "{sys.borderradius.lg}",
            "type": "borderRadius",
            "description": "defines the border radius of a single menu item."
          },
          "padding_h": {
            "value": "{core.dimensionpx.16}",
            "type": "spacing"
          },
          "padding_v": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing"
          }
        },
        "contentrow": {
          "itemspacing": {
            "value": "{core.dimensionpx.4}",
            "type": "spacing",
            "description": "adds space between icons and contentstack (label & description)"
          }
        },
        "contentstack": {
          "itemspacing": {
            "value": "0",
            "type": "spacing",
            "description": "adds space between label & description"
          }
        },
        "itemicon": {
          "iconsize": {
            "value": "{cmp.icon.container.size.sm}",
            "type": "sizing"
          }
        }
      },
      "menusection": {
        "sectiontitlewrapper": {
          "padding": {
            "value": "{cmp.menu.menusection.sectiontitlewrapper.paddingtop} {cmp.menu.menusection.sectiontitlewrapper.padding_h} {cmp.menu.menusection.sectiontitlewrapper.paddingbottom} {cmp.menu.menusection.sectiontitlewrapper.padding_h}",
            "type": "spacing",
            "description": "defines the padding around the section title text. apply on sectiontitlewrapper"
          },
          "padding_h": {
            "value": "{core.dimensionpx.16}",
            "type": "spacing",
            "description": "defines the padding around the section title text. apply on sectiontitlewrapper"
          },
          "paddingtop": {
            "value": "{core.dimensionpx.16}",
            "type": "spacing",
            "description": "defines the padding around the section title text. apply on sectiontitlewrapper"
          },
          "paddingbottom": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing",
            "description": "defines the padding around the section title text. apply on sectiontitlewrapper"
          }
        },
        "itemstack": {
          "itemspacing": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing"
          }
        }
      },
      "menusectionstack": {
        "itemspacing": {
          "value": "{core.dimensionpx.12}",
          "type": "spacing",
          "description": "defines the space between each menu section"
        },
        "padding": {
          "value": "{core.dimensionpx.12}",
          "type": "spacing",
          "description": "defines the padding around all stacked menu sections."
        }
      }
    },
    "inputfieldnumber": {
      "inputfield": {
        "textwrapper": {
          "itemspacing": {
            "sm": {
              "value": "{core.dimensionpx.4}",
              "type": "spacing",
              "description": "defines spacing between prefix, userinputtext and suffix"
            },
            "md": {
              "value": "{core.dimensionpx.4}",
              "type": "spacing",
              "description": "defines spacing between prefix, userinputtext and suffix"
            },
            "lg": {
              "value": "{core.dimensionpx.4}",
              "type": "spacing",
              "description": "defines spacing between prefix, userinputtext and suffix"
            }
          }
        }
      }
    },
    "radio": {
      "control": {
        "container": {
          "size": {
            "sm": {
              "value": "{core.dimensionpx.16}",
              "type": "sizing"
            },
            "md": {
              "value": "{core.dimensionpx.16}",
              "type": "sizing"
            },
            "lg": {
              "value": "{core.dimensionpx.16}",
              "type": "sizing"
            }
          },
          "borderradius": {
            "value": "{sys.borderradius.round}",
            "type": "borderRadius"
          },
          "borderwidth": {
            "sm": {
              "active": {
                "rest": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "error": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "error": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                }
              }
            },
            "md": {
              "active": {
                "rest": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "error": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "error": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                }
              }
            },
            "lg": {
              "active": {
                "rest": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "error": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                },
                "error": {
                  "value": "{core.dimensionpx.0}",
                  "type": "borderWidth"
                }
              }
            }
          }
        },
        "icon": {
          "iconsize": {
            "sm": {
              "inactive": {
                "rest": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "hover": {
                  "value": "{core.dimensionpx.12}",
                  "type": "sizing"
                },
                "pressed": {
                  "value": "{core.dimensionpx.10}",
                  "type": "sizing"
                },
                "focus": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "disabled": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "readonly": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "error": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                }
              },
              "active": {
                "rest": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "hover": {
                  "value": "{core.dimensionpx.8}",
                  "type": "sizing"
                },
                "pressed": {
                  "value": "{core.dimensionpx.10}",
                  "type": "sizing"
                },
                "focus": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "disabled": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "readonly": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "error": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                }
              }
            },
            "md": {
              "inactive": {
                "rest": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "hover": {
                  "value": "{core.dimensionpx.12}",
                  "type": "sizing"
                },
                "pressed": {
                  "value": "{core.dimensionpx.10}",
                  "type": "sizing"
                },
                "focus": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "disabled": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "readonly": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "error": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                }
              },
              "active": {
                "rest": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "hover": {
                  "value": "{core.dimensionpx.8}",
                  "type": "sizing"
                },
                "pressed": {
                  "value": "{core.dimensionpx.10}",
                  "type": "sizing"
                },
                "focus": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "disabled": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "readonly": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "error": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                }
              }
            },
            "lg": {
              "inactive": {
                "rest": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "hover": {
                  "value": "{core.dimensionpx.12}",
                  "type": "sizing"
                },
                "pressed": {
                  "value": "{core.dimensionpx.10}",
                  "type": "sizing"
                },
                "focus": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "disabled": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "readonly": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                },
                "error": {
                  "value": "{core.dimensionpx.14}",
                  "type": "sizing"
                }
              },
              "active": {
                "rest": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "hover": {
                  "value": "{core.dimensionpx.8}",
                  "type": "sizing"
                },
                "pressed": {
                  "value": "{core.dimensionpx.10}",
                  "type": "sizing"
                },
                "focus": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "disabled": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "readonly": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                },
                "error": {
                  "value": "{core.dimensionpx.6}",
                  "type": "sizing"
                }
              }
            }
          }
        }
      },
      "contentcol": {
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing",
            "description": "controls the vertical spacing between inlinelabel and the caption.\napplied on: textcontainer"
          },
          "md": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing",
            "description": "controls the vertical spacing between labelnexttocontrol and the caption.\napplied on: textcontainer"
          },
          "lg": {
            "value": "{core.dimensionpx.0}",
            "type": "spacing",
            "description": "controls the vertical spacing between labelnexttocontrol and the caption.\napplied on: textcontainer"
          }
        },
        "paddingtop": {
          "sm": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing",
            "description": "can be used to verticaly align the content of the textcontainer against the control"
          },
          "md": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing",
            "description": "controls the vertical spacing between inlinelabel and the caption.\napplied on: textcontainer"
          },
          "lg": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing",
            "description": "can be used to verticaly align the content of the textcontainer against the control"
          }
        }
      },
      "contentrow": {
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing",
            "description": "controls the horizontal spacing between the control and the label; applied to <controllabelcontainer>"
          },
          "md": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing",
            "description": "controls the horizontal spacing between the control and the label; applied to <controllabelcontainer>"
          },
          "lg": {
            "value": "{core.dimensionpx.12}",
            "type": "spacing",
            "description": "controls the horizontal spacing between the control and the label; applied to <controllabelcontainer>"
          }
        },
        "padding": {
          "sm": {
            "value": "{cmp.radio.contentrow.padding_v.sm} 0",
            "type": "spacing",
            "description": "controls the vertical spacing between inlinelabel and the caption.\napplied on: textcontainer"
          },
          "md": {
            "value": "{cmp.radio.contentrow.padding_v.md} 0",
            "type": "spacing",
            "description": "coded comps only!"
          },
          "lg": {
            "value": "{cmp.radio.contentrow.padding_v.lg} 0",
            "type": "spacing",
            "description": "coded comps only!"
          }
        },
        "padding_v": {
          "sm": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not apply on codes comps. use <padding> instead"
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not apply on codes comps. use <padding> instead"
          },
          "lg": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not apply on codes comps. use <padding> instead"
          }
        }
      },
      "controlwrapper": {
        "paddingtop": {
          "sm": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing",
            "description": "can be used to align the checkbox control against the text"
          },
          "md": {
            "value": "{core.dimensionrem.4}",
            "type": "spacing",
            "description": "can be used to align the checkbox control against the text"
          },
          "lg": {
            "value": "{core.dimensionrem.4}",
            "type": "spacing",
            "description": "can be used to align the checkbox control against the text"
          }
        }
      }
    },
    "radiogroup": {
      "captionslot": {
        "paddingtop": {
          "sm": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing"
          }
        }
      },
      "legendwrapper": {
        "paddingbottom": {
          "sm": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing",
            "description": "defines the space between legend and radiostack. apply on radiogroup/legendwrapper as bottom-padding."
          },
          "md": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing",
            "description": "defines the space between legend and radiostack. apply on radiogroup/legendwrapper as bottom-padding."
          },
          "lg": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing",
            "description": "defines the space between legend and radiostack. apply on radiogroup/legendwrapper as bottom-padding."
          }
        }
      },
      "radiostackhorizontal": {
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing",
            "description": "defines the gap between each radio option inside <radiostack>"
          },
          "md": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing",
            "description": "defines the gap between each radio option inside <radiostack>"
          },
          "lg": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing",
            "description": "defines the gap between each radio option inside <radiostack>"
          }
        }
      },
      "radiostackvertical": {
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "defines the gap between each radio option inside <radiostack>"
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "defines the gap between each radio option inside <radiostack>"
          },
          "lg": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "defines the gap between each radio option inside <radiostack>"
          }
        }
      }
    },
    "slider": {
      "thumb": {
        "shape": {
          "borderwidth": {
            "rest": {
              "value": "{core.dimensionpx.2}",
              "type": "borderWidth"
            },
            "hover": {
              "value": "{core.dimensionpx.4}",
              "type": "borderWidth"
            },
            "pressed": {
              "value": "{core.dimensionpx.4}",
              "type": "borderWidth"
            },
            "focus": {
              "value": "{core.dimensionpx.2}",
              "type": "borderWidth"
            },
            "disabled": {
              "value": "{core.dimensionpx.2}",
              "type": "borderWidth"
            },
            "readonly": {
              "value": "{core.dimensionpx.2}",
              "type": "borderWidth"
            }
          },
          "size": {
            "rest": {
              "value": "{core.dimensionpx.14}",
              "type": "sizing"
            },
            "hover": {
              "value": "{core.dimensionpx.20}",
              "type": "sizing"
            },
            "pressed": {
              "value": "{core.dimensionpx.20}",
              "type": "sizing"
            },
            "focus": {
              "value": "{core.dimensionpx.14}",
              "type": "sizing"
            },
            "disabled": {
              "value": "{core.dimensionpx.14}",
              "type": "sizing"
            },
            "readonly": {
              "value": "{core.dimensionpx.14}",
              "type": "sizing"
            }
          }
        },
        "container": {
          "size": {
            "value": "{core.dimensionpx.24}",
            "type": "sizing"
          }
        }
      },
      "tickmark": {
        "borderwidth": {
          "default": {
            "active": {
              "value": "{core.dimensionpx.1}",
              "type": "borderWidth"
            },
            "inactive": {
              "value": "{core.dimensionpx.1}1",
              "type": "borderWidth"
            }
          },
          "mute": {
            "active": {
              "value": "{core.dimensionpx.1}",
              "type": "borderWidth"
            },
            "inactive": {
              "value": "{core.dimensionpx.1}",
              "type": "borderWidth"
            }
          }
        },
        "size": {
          "value": "{core.dimensionpx.6}",
          "type": "sizing"
        }
      }
    },
    "stepperbutton": {
      "container": {
        "width": {
          "sm": {
            "value": "{core.dimensionrem.32}",
            "type": "sizing"
          },
          "md": {
            "value": "{core.dimensionrem.40}",
            "type": "sizing"
          },
          "lg": {
            "value": "{core.dimensionrem.48}",
            "type": "sizing"
          }
        },
        "borderradius": {
          "sm": {
            "value": "{sys.borderradius.none}",
            "type": "borderRadius"
          },
          "md": {
            "value": "{sys.borderradius.none}",
            "type": "borderRadius"
          },
          "lg": {
            "value": "{sys.borderradius.none}",
            "type": "borderRadius"
          }
        },
        "borderwidth": {
          "value": "{sem.buttons.container.borderwidth}",
          "type": "borderWidth"
        }
      },
      "icon": {
        "iconsize": {
          "sm": {
            "value": "{core.dimensionrem.16}",
            "type": "sizing"
          },
          "md": {
            "value": "{core.dimensionrem.16}",
            "type": "sizing"
          },
          "lg": {
            "value": "{core.dimensionrem.24}",
            "type": "sizing"
          }
        }
      }
    },
    "steppercombo": {
      "container": {
        "width": {
          "vertical": {
            "sm": {
              "value": "{core.dimensionrem.32}",
              "type": "sizing"
            },
            "md": {
              "value": "{core.dimensionrem.40}",
              "type": "sizing"
            },
            "lg": {
              "value": "{core.dimensionrem.48}",
              "type": "sizing"
            }
          },
          "horizontal": {
            "sm": {
              "value": "{core.dimensionrem.64}",
              "type": "sizing"
            },
            "md": {
              "value": "{core.dimensionrem.80}",
              "type": "sizing"
            },
            "lg": {
              "value": "{core.dimensionrem.96}",
              "type": "sizing"
            }
          }
        }
      },
      "dividerwrapper": {
        "padding_v": {
          "sm": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "apply only on layoutvariant horizontal"
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "apply only on layoutvariant horizontal"
          },
          "lg": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "apply only on layoutvariant horizontal"
          }
        },
        "padding_h": {
          "sm": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "apply only on layoutvariant vertical"
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "apply only on layoutvariant vertical"
          },
          "lg": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "apply only on layoutvariant vertical"
          }
        },
        "padding": {
          "verticallayout": {
            "sm": {
              "value": "0 {cmp.steppercombo.dividerwrapper.padding_h.sm}",
              "type": "spacing"
            },
            "md": {
              "value": "0 {cmp.steppercombo.dividerwrapper.padding_h.md}",
              "type": "spacing"
            },
            "lg": {
              "value": "0 {cmp.steppercombo.dividerwrapper.padding_h.lg}",
              "type": "spacing"
            }
          },
          "horizontallayout": {
            "sm": {
              "value": "{cmp.steppercombo.dividerwrapper.padding_v.sm} 0",
              "type": "spacing"
            },
            "md": {
              "value": "{cmp.steppercombo.dividerwrapper.padding_v.md} 0",
              "type": "spacing"
            },
            "lg": {
              "value": "{cmp.steppercombo.dividerwrapper.padding_v.lg} 0",
              "type": "spacing"
            }
          }
        }
      }
    },
    "tabbar": {
      "buttonwrapper": {
        "innerpadding": {
          "sm": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use <padding> in coded comps."
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use <padding> in coded comps."
          },
          "lg": {
            "value": "{core.dimensionrem.12}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use <padding> in coded comps."
          }
        },
        "padding": {
          "leading": {
            "sm": {
              "value": "0 {cmp.tabbar.buttonwrapper.innerpadding.sm}",
              "type": "spacing",
              "description": "coded comps only!"
            },
            "md": {
              "value": "0 {cmp.tabbar.buttonwrapper.innerpadding.md} 0 0",
              "type": "spacing",
              "description": "coded comps only!."
            },
            "lg": {
              "value": "0 {cmp.tabbar.buttonwrapper.innerpadding.lg} 0 0",
              "type": "spacing",
              "description": "coded comps only!."
            }
          },
          "trailing": {
            "sm": {
              "value": "0 0 0 {cmp.tabbar.buttonwrapper.innerpadding.sm}",
              "type": "spacing",
              "description": "coded comps only!"
            },
            "md": {
              "value": "0 0 0 {cmp.tabbar.buttonwrapper.innerpadding.md}",
              "type": "spacing",
              "description": "coded comps only!."
            },
            "lg": {
              "value": "0 0 0 {cmp.tabbar.buttonwrapper.innerpadding.lg}",
              "type": "spacing",
              "description": "coded comps only!."
            }
          }
        }
      },
      "tab": {
        "highlightline": {
          "height": {
            "sm": {
              "value": "{core.dimensionpx.2}",
              "type": "sizing",
              "description": "defines the thickness of the highlight line.\napply on <highlightline>"
            },
            "md": {
              "value": "{core.dimensionpx.2}",
              "type": "sizing",
              "description": "defines the thickness of the highlight line.\napply on <highlightline>"
            },
            "lg": {
              "value": "{core.dimensionpx.2}",
              "type": "sizing",
              "description": "defines the thickness of the highlight line.\napply on <highlightline>"
            }
          }
        },
        "contentcol": {
          "paddingtop": {
            "sm": {
              "value": "{core.dimensionrem.4}",
              "type": "spacing",
              "description": "defines the toppadding of a tab; apply on <contentcol>"
            },
            "md": {
              "value": "{core.dimensionrem.8}",
              "type": "spacing",
              "description": "defines the toppadding of a tab; apply on <contentcol>"
            },
            "lg": {
              "value": "{core.dimensionrem.8}",
              "type": "spacing",
              "description": "defines the toppadding of a tab; apply on <contentcol>"
            }
          },
          "itemspacing": {
            "sm": {
              "value": "{core.dimensionrem.8}",
              "type": "spacing",
              "description": "defines the gap beteen the tabs label/icon and the <highlightline>"
            },
            "md": {
              "value": "{core.dimensionrem.8}",
              "type": "spacing",
              "description": "defines the gap beteen the tabs label/icon and the <highlightline>"
            },
            "lg": {
              "value": "{core.dimensionrem.8}",
              "type": "spacing",
              "description": "defines the gap beteen the tabs label/icon and the <highlightline>"
            }
          }
        },
        "contentrow": {
          "padding_h": {
            "sm": {
              "value": "{core.dimensionpx.12}",
              "type": "spacing",
              "description": "defines the padding left and right of <contentrow>"
            },
            "md": {
              "value": "{core.dimensionpx.16}",
              "type": "spacing",
              "description": "defines the padding left and right of <contentrow>"
            },
            "lg": {
              "value": "{core.dimensionpx.16}",
              "type": "spacing",
              "description": "defines the padding left and right of <contentrow>"
            }
          },
          "itemspacing": {
            "sm": {
              "value": "{core.dimensionpx.2}",
              "type": "spacing",
              "description": "defines the gap between the icon and the label of a tab. apply on <contentrow>"
            },
            "md": {
              "value": "{core.dimensionpx.2}",
              "type": "spacing",
              "description": "defines the gap between the icon and the label of a tab. apply on <contentrow>"
            },
            "lg": {
              "value": "{core.dimensionpx.4}",
              "type": "spacing",
              "description": "defines the gap between the icon and the label of a tab. apply on <contentrow>"
            }
          }
        },
        "icon": {
          "iconsize": {
            "sm": {
              "value": "{core.dimensionrem.12}",
              "type": "sizing",
              "description": "defines height and width of the icon of a tab"
            },
            "md": {
              "value": "{core.dimensionrem.16}",
              "type": "sizing",
              "description": "defines height and width of the icon of a tab"
            },
            "lg": {
              "value": "{core.dimensionrem.16}",
              "type": "sizing",
              "description": "defines height and width of the icon of a tab"
            }
          }
        }
      }
    },
    "textarea": {
      "inputfield": {
        "minheight": {
          "sm": {
            "value": "{core.dimensionrem.64}",
            "type": "sizing"
          },
          "md": {
            "value": "{core.dimensionrem.80}",
            "type": "sizing"
          },
          "lg": {
            "value": "{core.dimensionrem.112}",
            "type": "sizing"
          }
        }
      }
    },
    "buttontext": {
      "container": {
        "padding_v": {
          "xs": {
            "value": "{core.dimensionrem.4}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "sm": {
            "value": "{core.dimensionrem.4}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "lg": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "xl": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          }
        },
        "padding_h": {
          "xs": {
            "value": "{core.dimensionpx.12}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "sm": {
            "value": "{core.dimensionpx.12}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "md": {
            "value": "{core.dimensionpx.16}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "lg": {
            "value": "{core.dimensionpx.24}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "xl": {
            "value": "{core.dimensionpx.40}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          }
        },
        "padding": {
          "xs": {
            "value": "{cmp.buttontext.container.padding_v.xs} {cmp.buttontext.container.padding_h.xs}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "sm": {
            "value": "{cmp.buttontext.container.padding_v.sm} {cmp.buttontext.container.padding_h.sm}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "md": {
            "value": "{cmp.buttontext.container.padding_v.md} {cmp.buttontext.container.padding_h.md}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "lg": {
            "value": "{cmp.buttontext.container.padding_v.lg} {cmp.buttontext.container.padding_h.lg}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "xl": {
            "value": "{cmp.buttontext.container.padding_v.xl} {cmp.buttontext.container.padding_h.xl}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          }
        },
        "itemspacing": {
          "xs": {
            "value": "{core.dimensionpx.4}",
            "type": "spacing"
          },
          "sm": {
            "value": "{cmp.buttontext.container.itemspacing.xs}",
            "type": "spacing"
          },
          "md": {
            "value": "{cmp.buttontext.container.itemspacing.xs}",
            "type": "spacing"
          },
          "lg": {
            "value": "{cmp.buttontext.container.itemspacing.xs}",
            "type": "spacing"
          },
          "xl": {
            "value": "{cmp.buttontext.container.itemspacing.xs}",
            "type": "spacing"
          }
        },
        "borderradius": {
          "xs": {
            "value": "{sem.buttons.container.borderradius.xs}",
            "type": "borderRadius"
          },
          "sm": {
            "value": "{sem.buttons.container.borderradius.sm}",
            "type": "borderRadius"
          },
          "md": {
            "value": "{sem.buttons.container.borderradius.md}",
            "type": "borderRadius"
          },
          "lg": {
            "value": "{sem.buttons.container.borderradius.lg}",
            "type": "borderRadius"
          },
          "xl": {
            "value": "{sem.buttons.container.borderradius.xl}",
            "type": "borderRadius"
          }
        }
      }
    },
    "textdropdown": {
      "container": {
        "paddingtop": {
          "xs": {
            "value": "{core.dimensionrem.4}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "sm": {
            "value": "{core.dimensionrem.4}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "lg": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "xl": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          }
        },
        "paddingright": {
          "xs": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "sm": {
            "value": "{core.dimensionpx.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "md": {
            "value": "{core.dimensionpx.12}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "lg": {
            "value": "{core.dimensionpx.16}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "xl": {
            "value": "{core.dimensionpx.32}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          }
        },
        "paddingbottom": {
          "xs": {
            "value": "{core.dimensionrem.4}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "sm": {
            "value": "{core.dimensionrem.4}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "lg": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "xl": {
            "value": "{core.dimensionrem.16}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          }
        },
        "paddingleft": {
          "xs": {
            "value": "{core.dimensionpx.12}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "sm": {
            "value": "{core.dimensionpx.12}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "md": {
            "value": "{core.dimensionpx.20}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "lg": {
            "value": "{core.dimensionpx.24}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          },
          "xl": {
            "value": "{core.dimensionpx.40}",
            "type": "spacing",
            "description": "figma only! do not use in coded comps. allways use \"padding\" in coded comps."
          }
        },
        "padding": {
          "xs": {
            "value": "{cmp.textdropdown.container.paddingtop.xs} {cmp.textdropdown.container.paddingright.xs} {cmp.textdropdown.container.paddingbottom.xs} {cmp.textdropdown.container.paddingleft.xs}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "sm": {
            "value": "{cmp.textdropdown.container.paddingtop.sm} {cmp.textdropdown.container.paddingright.sm} {cmp.textdropdown.container.paddingbottom.sm} {cmp.textdropdown.container.paddingleft.sm}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "md": {
            "value": "{cmp.textdropdown.container.paddingtop.md} {cmp.textdropdown.container.paddingright.md} {cmp.textdropdown.container.paddingbottom.md} {cmp.textdropdown.container.paddingleft.md}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "lg": {
            "value": "{cmp.textdropdown.container.paddingtop.lg} {cmp.textdropdown.container.paddingright.lg} {cmp.textdropdown.container.paddingbottom.lg} {cmp.textdropdown.container.paddingleft.lg}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          },
          "xl": {
            "value": "{cmp.textdropdown.container.paddingtop.xl} {cmp.textdropdown.container.paddingright.xl} {cmp.textdropdown.container.paddingbottom.xl} {cmp.textdropdown.container.paddingleft.xl}",
            "type": "spacing",
            "description": "do not apply in figma, use aliases instead."
          }
        },
        "itemspacing": {
          "xs": {
            "value": "{core.dimensionpx.2}",
            "type": "spacing"
          },
          "sm": {
            "value": "{core.dimensionpx.2}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionpx.2}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionpx.2}",
            "type": "spacing"
          },
          "xl": {
            "value": "{core.dimensionpx.2}",
            "type": "spacing"
          }
        },
        "borderradius": {
          "xs": {
            "value": "{sem.buttons.container.borderradius.xs}",
            "type": "borderRadius"
          },
          "sm": {
            "value": "{sem.buttons.container.borderradius.sm}",
            "type": "borderRadius"
          },
          "md": {
            "value": "{sem.buttons.container.borderradius.md}",
            "type": "borderRadius"
          },
          "lg": {
            "value": "{sem.buttons.container.borderradius.lg}",
            "type": "borderRadius"
          },
          "xl": {
            "value": "{sem.buttons.container.borderradius.xl}",
            "type": "borderRadius"
          }
        }
      }
    },
    "toggleswitch": {
      "container": {
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionrem.8}",
            "type": "spacing"
          }
        }
      },
      "contentcol": {
        "itemspacing": {
          "sm": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing"
          },
          "md": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing"
          },
          "lg": {
            "value": "{core.dimensionrem.0}",
            "type": "spacing"
          }
        }
      },
      "control": {
        "container": {
          "borderradius": {
            "value": "{core.dimensionrem.40}",
            "type": "borderRadius"
          },
          "borderwidth": {
            "sm": {
              "active": {
                "rest": {
                  "value": "{sys.borderwidth.none}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.sm.active.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.sm.active.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.sm.active.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.sm.active.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.sm.active.rest}",
                  "type": "borderWidth"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{sys.borderwidth.none}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth"
                }
              }
            },
            "md": {
              "active": {
                "rest": {
                  "value": "{sys.borderwidth.none}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.md.active.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.md.active.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.md.active.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.md.active.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.md.active.rest}",
                  "type": "borderWidth"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{sys.borderwidth.none}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.md.inactive.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.md.inactive.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.md.inactive.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.md.inactive.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.md.inactive.rest}",
                  "type": "borderWidth"
                }
              }
            },
            "lg": {
              "active": {
                "rest": {
                  "value": "{sys.borderwidth.none}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{sys.borderwidth.none}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.container.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                }
              }
            }
          },
          "width": {
            "sm": {
              "value": "2.25rem",
              "type": "sizing"
            },
            "md": {
              "value": "2.75rem",
              "type": "sizing"
            },
            "lg": {
              "value": "3.25rem",
              "type": "sizing"
            }
          },
          "height": {
            "sm": {
              "value": "{core.dimensionrem.20}",
              "type": "sizing"
            },
            "md": {
              "value": "{core.dimensionrem.24}",
              "type": "sizing"
            },
            "lg": {
              "value": "{core.dimensionrem.28}",
              "type": "sizing"
            }
          },
          "padding": {
            "sm": {
              "value": "{core.dimensionpx.2}",
              "type": "spacing"
            },
            "md": {
              "value": "{core.dimensionpx.2}",
              "type": "spacing"
            },
            "lg": {
              "value": "{core.dimensionpx.2}",
              "type": "spacing"
            }
          }
        },
        "ay11icon": {
          "iconsize": {
            "sm": {
              "value": "{core.dimensionrem.16}",
              "type": "sizing"
            },
            "md": {
              "value": "{core.dimensionrem.16}",
              "type": "sizing"
            },
            "lg": {
              "value": "{core.dimensionrem.16}",
              "type": "sizing"
            }
          }
        },
        "ay11iconcontainer": {
          "padding_h": {
            "sm": {
              "value": "{core.dimensionrem.0}",
              "type": "spacing"
            },
            "md": {
              "value": "{core.dimensionrem.2}",
              "type": "spacing"
            },
            "lg": {
              "value": "0.21875rem",
              "type": "spacing"
            }
          }
        },
        "knob": {
          "size": {
            "sm": {
              "value": "{core.dimensionrem.16}",
              "type": "sizing"
            },
            "md": {
              "value": "{core.dimensionrem.20}",
              "type": "sizing"
            },
            "lg": {
              "value": "{core.dimensionrem.24}",
              "type": "sizing"
            }
          },
          "borderwidth": {
            "sm": {
              "active": {
                "rest": {
                  "value": "{sys.borderwidth.medium}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.sm.active.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.sm.active.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.sm.active.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.sm.active.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.sm.active.rest}",
                  "type": "borderWidth"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{sys.borderwidth.medium}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.sm.inactive.rest}",
                  "type": "borderWidth"
                }
              }
            },
            "md": {
              "active": {
                "rest": {
                  "value": "{sys.borderwidth.medium}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.md.active.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.md.active.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.md.active.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.md.active.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.md.active.rest}",
                  "type": "borderWidth"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{sys.borderwidth.medium}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.md.inactive.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.md.inactive.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.md.inactive.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.md.inactive.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.md.inactive.rest}",
                  "type": "borderWidth"
                }
              }
            },
            "lg": {
              "active": {
                "rest": {
                  "value": "{sys.borderwidth.medium}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.lg.active.rest}",
                  "type": "borderWidth"
                }
              },
              "inactive": {
                "rest": {
                  "value": "{sys.borderwidth.medium}",
                  "type": "borderWidth"
                },
                "hover": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.lg.inactive.rest}",
                  "type": "borderWidth"
                },
                "pressed": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.lg.inactive.rest}",
                  "type": "borderWidth"
                },
                "focus": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.lg.inactive.rest}",
                  "type": "borderWidth"
                },
                "disabled": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.lg.inactive.rest}",
                  "type": "borderWidth"
                },
                "readonly": {
                  "value": "{cmp.toggleswitch.control.knob.borderwidth.lg.inactive.rest}",
                  "type": "borderWidth"
                }
              }
            }
          }
        }
      },
      "controlwithstatelabel": {
        "container": {
          "itemspacing": {
            "sm": {
              "value": "{core.dimensionpx.8}",
              "type": "spacing"
            },
            "md": {
              "value": "{core.dimensionpx.8}",
              "type": "spacing"
            },
            "lg": {
              "value": "{core.dimensionpx.8}",
              "type": "spacing"
            }
          }
        }
      }
    },
    "tooltip": {
      "textwrapper": {
        "padding": {
          "value": "{cmp.tooltip.textwrapper.padding_v} {cmp.tooltip.textwrapper.padding_h}",
          "type": "spacing"
        },
        "borderradius": {
          "value": "{sys.borderradius.md}",
          "type": "borderRadius"
        },
        "minwidth": {
          "value": "{core.dimensionrem.40}",
          "type": "sizing",
          "description": "defines the minimum width of the tooltip."
        },
        "maxwidth": {
          "value": "{core.dimensionrem.80}",
          "type": "sizing",
          "description": "defines the maximum width of the tooltip."
        },
        "padding_v": {
          "value": "{core.dimensionpx.6}",
          "type": "spacing"
        },
        "padding_h": {
          "value": "{core.dimensionpx.8}",
          "type": "spacing"
        }
      },
      "nosewrapper": {
        "padding_v": {
          "value": "{core.dimensionpx.5}",
          "type": "spacing",
          "description": "apply on tooltips where the nose is either left or right. the pading defines the inset of the nose."
        },
        "padding_h": {
          "value": "{core.dimensionpx.8}",
          "type": "spacing",
          "description": "apply on tooltips where the nose is either top or bottom. the pading defines the inset of the nose."
        }
      }
    }
  }
}