{
  "Action": {
    "StepperButton": {
      "Border": {
        "Rest": {
          "value": {
            "color": "{Action.Silent.SurfaceStroke.Rest}",
            "width": "{core.borderWidth.None}"
          },
          "type": "border"
        },
        "Hover": {
          "value": {
            "color": "{Action.Silent.SurfaceStroke.Hover}",
            "width": "{core.borderWidth.None}"
          },
          "type": "border"
        },
        "Pressed": {
          "value": {
            "color": "{Action.Silent.SurfaceStroke.Pressed}",
            "width": "{core.borderWidth.None}"
          },
          "type": "border"
        },
        "Focus": {
          "value": "{Global.FocusBorder}",
          "type": "border"
        },
        "Disabled": {
          "value": {
            "color": "{Action.Silent.SurfaceStroke.Disabled}",
            "width": "{core.borderWidth.None}"
          },
          "type": "border"
        }
      },
      "SM": {
        "Width": {
          "value": "{core.dimensionREM.32}",
          "type": "sizing"
        }
      },
      "MD": {
        "Width": {
          "value": "{core.dimensionREM.40}",
          "type": "sizing"
        }
      },
      "LG": {
        "Width": {
          "value": "{core.dimensionREM.48}",
          "type": "sizing"
        }
      },
      "Container": {
        "BorderRadius": {
          "SM": {
            "value": "{core.borderRadius.None}",
            "type": "borderRadius"
          },
          "MD": {
            "value": "{core.borderRadius.None}",
            "type": "borderRadius"
          },
          "LG": {
            "value": "{core.borderRadius.None}",
            "type": "borderRadius"
          }
        }
      }
    },
    "StepperCombo": {
      "SM": {
        "Vertical": {
          "Width": {
            "value": "{core.dimensionREM.32}",
            "type": "sizing"
          },
          "DividerWrapper": {
            "Padding": {
              "value": "0 {core.dimensionREM.8}",
              "type": "spacing"
            }
          }
        },
        "Horizontal": {
          "Width": {
            "value": "{core.dimensionREM.64}",
            "type": "sizing"
          },
          "DividerWrapper": {
            "Padding": {
              "value": "{core.dimensionREM.8} 0",
              "type": "spacing"
            }
          }
        }
      },
      "MD": {
        "Vertical": {
          "Width": {
            "value": "{core.dimensionREM.40}",
            "type": "sizing"
          },
          "DividerWrapper": {
            "Padding": {
              "value": "0 {core.dimensionREM.8}",
              "type": "spacing"
            }
          }
        },
        "Horizontal": {
          "Width": {
            "value": "{core.dimensionREM.80}",
            "type": "sizing"
          },
          "DividerWrapper": {
            "Padding": {
              "value": "{core.dimensionREM.8} 0",
              "type": "spacing"
            }
          }
        }
      },
      "LG": {
        "Vertical": {
          "Width": {
            "value": "{core.dimensionREM.48}",
            "type": "sizing"
          },
          "DividerWrapper": {
            "Padding": {
              "value": "0 {core.dimensionREM.8}",
              "type": "spacing"
            }
          }
        },
        "Horizontal": {
          "Width": {
            "value": "{core.dimensionREM.96}",
            "type": "sizing"
          },
          "DividerWrapper": {
            "Padding": {
              "value": "{core.dimensionREM.8} 0",
              "type": "spacing"
            }
          }
        }
      }
    },
    "Menu": {
      "MenuItem": {
        "Padding": {
          "value": "{core.dimensionPX.8} {core.dimensionPX.16}",
          "type": "spacing",
          "description": "Adds padding to the menu item"
        },
        "Container": {
          "ItemSpacing": {
            "value": "{core.dimensionPX.4}",
            "type": "spacing",
            "description": "Adds space between Icons and ContentStack (Label & Description)"
          }
        },
        "ContentStack": {
          "ItemSpacing": {
            "value": "0",
            "type": "spacing",
            "description": "Adds space between Label & Description"
          }
        },
        "BorderRadius": {
          "value": "{Action.BorderRadius}",
          "type": "borderRadius",
          "description": "Defines the border radius of a single menu item."
        }
      },
      "Section": {
        "SectionTitleWrapper": {
          "Padding": {
            "value": "{core.dimensionPX.16} {core.dimensionPX.16} {core.dimensionPX.8} {core.dimensionPX.16}",
            "type": "spacing",
            "description": "Defines the padding around the section title text. Apply on SectionTitleWrapper"
          }
        },
        "SectionTitle": {
          "value": "{core.typography.sourceSansPro.semibold.75}",
          "type": "typography"
        }
      },
      "SectionStack": {
        "ItemSpacing": {
          "value": "{core.dimensionPX.12}",
          "type": "spacing",
          "description": "Defines the space between each menu section"
        },
        "Padding": {
          "value": "{core.dimensionPX.12}",
          "type": "spacing",
          "description": "Defines the padding around all stacked menu sections."
        }
      },
      "BorderRadius": {
        "value": "{core.borderRadius.LG}",
        "type": "borderRadius",
        "description": "Defines the border radius of the whole menu component"
      }
    }
  },
  "Actions": {
    "TextButton": {
      "Container": {
        "PaddingTopBottom": {
          "XS": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "SM": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "MD": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "LG": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "XL": {
            "value": "{core.dimensionREM.16}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          }
        },
        "PaddingLeftRight": {
          "XS": {
            "value": "{core.dimensionPX.12}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "SM": {
            "value": "{core.dimensionPX.12}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "MD": {
            "value": "{core.dimensionPX.16}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "LG": {
            "value": "{core.dimensionPX.24}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "XL": {
            "value": "{core.dimensionPX.40}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          }
        },
        "Padding": {
          "XS": {
            "value": "{Actions.TextButton.Container.PaddingTopBottom.XS} {Actions.TextButton.Container.PaddingLeftRight.XS}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "SM": {
            "value": "{Actions.TextButton.Container.PaddingTopBottom.SM} {Actions.TextButton.Container.PaddingLeftRight.SM}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "MD": {
            "value": "{Actions.TextButton.Container.PaddingTopBottom.MD} {Actions.TextButton.Container.PaddingLeftRight.MD}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "LG": {
            "value": "{Actions.TextButton.Container.PaddingTopBottom.LG} {Actions.TextButton.Container.PaddingLeftRight.LG}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "XL": {
            "value": "{Actions.TextButton.Container.PaddingTopBottom.XL} {Actions.TextButton.Container.PaddingLeftRight.XL}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          }
        },
        "ItemSpacing": {
          "XS": {
            "value": "{core.dimensionPX.4}",
            "type": "spacing"
          },
          "SM": {
            "value": "{Actions.TextButton.Container.ItemSpacing.XS}",
            "type": "spacing"
          },
          "MD": {
            "value": "{Actions.TextButton.Container.ItemSpacing.XS}",
            "type": "spacing"
          },
          "LG": {
            "value": "{Actions.TextButton.Container.ItemSpacing.XS}",
            "type": "spacing"
          },
          "XL": {
            "value": "{Actions.TextButton.Container.ItemSpacing.XS}",
            "type": "spacing"
          }
        },
        "BorderRadius": {
          "XS": {
            "value": "{Actions.Container.BorderRadius.XS}",
            "type": "borderRadius"
          },
          "SM": {
            "value": "{Actions.Container.BorderRadius.SM}",
            "type": "borderRadius"
          },
          "MD": {
            "value": "{Actions.Container.BorderRadius.MD}",
            "type": "borderRadius"
          },
          "LG": {
            "value": "{Actions.Container.BorderRadius.LG}",
            "type": "borderRadius"
          },
          "XL": {
            "value": "{Actions.Container.BorderRadius.XL}",
            "type": "borderRadius"
          }
        }
      }
    },
    "TextDropdown": {
      "Container": {
        "PaddingTop": {
          "XS": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "SM": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "MD": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "LG": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "XL": {
            "value": "{core.dimensionREM.16}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          }
        },
        "PaddingRight": {
          "XS": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "SM": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "MD": {
            "value": "{core.dimensionPX.12}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "LG": {
            "value": "{core.dimensionPX.16}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "XL": {
            "value": "{core.dimensionPX.32}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          }
        },
        "PaddingBottom": {
          "XS": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "SM": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "MD": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "LG": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "XL": {
            "value": "{core.dimensionREM.16}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          }
        },
        "PaddingLeft": {
          "XS": {
            "value": "{core.dimensionPX.12}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "SM": {
            "value": "{core.dimensionPX.12}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "MD": {
            "value": "{core.dimensionPX.20}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "LG": {
            "value": "{core.dimensionPX.24}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "XL": {
            "value": "{core.dimensionPX.40}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          }
        },
        "Padding": {
          "XS": {
            "value": "{Actions.TextDropdown.Container.PaddingTop.XS} {Actions.TextDropdown.Container.PaddingRight.XS} {Actions.TextDropdown.Container.PaddingBottom.XS} {Actions.TextDropdown.Container.PaddingLeft.XS}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "SM": {
            "value": "{Actions.TextDropdown.Container.PaddingTop.SM} {Actions.TextDropdown.Container.PaddingRight.SM} {Actions.TextDropdown.Container.PaddingBottom.SM} {Actions.TextDropdown.Container.PaddingLeft.SM}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "MD": {
            "value": "{Actions.TextDropdown.Container.PaddingTop.MD} {Actions.TextDropdown.Container.PaddingRight.MD} {Actions.TextDropdown.Container.PaddingBottom.MD} {Actions.TextDropdown.Container.PaddingLeft.MD}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "LG": {
            "value": "{Actions.TextDropdown.Container.PaddingTop.LG} {Actions.TextDropdown.Container.PaddingRight.LG} {Actions.TextDropdown.Container.PaddingBottom.LG} {Actions.TextDropdown.Container.PaddingLeft.LG}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "XL": {
            "value": "{Actions.TextDropdown.Container.PaddingTop.XL} {Actions.TextDropdown.Container.PaddingRight.XL} {Actions.TextDropdown.Container.PaddingBottom.XL} {Actions.TextDropdown.Container.PaddingLeft.XL}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          }
        },
        "ItemSpacing": {
          "XS": {
            "value": "{core.dimensionPX.2}",
            "type": "spacing"
          },
          "SM": {
            "value": "{core.dimensionPX.2}",
            "type": "spacing"
          },
          "MD": {
            "value": "{core.dimensionPX.2}",
            "type": "spacing"
          },
          "LG": {
            "value": "{core.dimensionPX.2}",
            "type": "spacing"
          },
          "XL": {
            "value": "{core.dimensionPX.2}",
            "type": "spacing"
          }
        },
        "BorderRadius": {
          "XS": {
            "value": "{Actions.Container.BorderRadius.XS}",
            "type": "borderRadius"
          },
          "SM": {
            "value": "{Actions.Container.BorderRadius.SM}",
            "type": "borderRadius"
          },
          "MD": {
            "value": "{Actions.Container.BorderRadius.MD}",
            "type": "borderRadius"
          },
          "LG": {
            "value": "{Actions.Container.BorderRadius.LG}",
            "type": "borderRadius"
          },
          "XL": {
            "value": "{Actions.Container.BorderRadius.XL}",
            "type": "borderRadius"
          }
        }
      }
    },
    "IconButton": {
      "Container": {
        "Padding": {
          "XS": {
            "value": "{core.dimensionREM.6}",
            "type": "spacing"
          },
          "SM": {
            "value": "{core.dimensionREM.6}",
            "type": "spacing"
          },
          "MD": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing"
          },
          "LG": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing"
          },
          "XL": {
            "value": "{core.dimensionREM.12}",
            "type": "spacing"
          }
        },
        "ItemSpacing": {
          "XS": {
            "value": "0",
            "type": "spacing"
          },
          "SM": {
            "value": "0",
            "type": "spacing"
          },
          "MD": {
            "value": "0",
            "type": "spacing"
          },
          "LG": {
            "value": "0",
            "type": "spacing"
          },
          "XL": {
            "value": "0",
            "type": "spacing"
          }
        },
        "BorderRadius": {
          "XS": {
            "value": "{Actions.Container.BorderRadius.XS}",
            "type": "borderRadius"
          },
          "SM": {
            "value": "{Actions.Container.BorderRadius.SM}",
            "type": "borderRadius"
          },
          "MD": {
            "value": "{Actions.Container.BorderRadius.MD}",
            "type": "borderRadius"
          },
          "LG": {
            "value": "{Actions.Container.BorderRadius.LG}",
            "type": "borderRadius"
          },
          "XL": {
            "value": "{Actions.Container.BorderRadius.XL}",
            "type": "borderRadius"
          }
        }
      }
    },
    "IconDropdown": {
      "Container": {
        "PaddingTop": {
          "XS": {
            "value": "{core.dimensionREM.6}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "SM": {
            "value": "{core.dimensionREM.6}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "MD": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "LG": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "XL": {
            "value": "{core.dimensionREM.12}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          }
        },
        "PaddingRight": {
          "XS": {
            "value": "{core.dimensionREM.1}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "SM": {
            "value": "{core.dimensionREM.1}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "MD": {
            "value": "{core.dimensionREM.1}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "LG": {
            "value": "{core.dimensionREM.0}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "XL": {
            "value": "{core.dimensionREM.0}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          }
        },
        "PaddingBottom": {
          "XS": {
            "value": "{core.dimensionREM.6}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "SM": {
            "value": "{core.dimensionREM.6}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "MD": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "LG": {
            "value": "{core.dimensionREM.8}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "XL": {
            "value": "{core.dimensionREM.12}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          }
        },
        "PaddingLeft": {
          "XS": {
            "value": "{core.dimensionREM.3}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "SM": {
            "value": "{core.dimensionREM.3}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "MD": {
            "value": "{core.dimensionREM.3}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "LG": {
            "value": "{core.dimensionREM.2}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          },
          "XL": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing",
            "description": "Figma only! Do not use in coded comps. Allways use \"Padding\" in coded Comps."
          }
        },
        "Padding": {
          "XS": {
            "value": "{Actions.IconDropdown.Container.PaddingTop.XS} {Actions.IconDropdown.Container.PaddingRight.XS} {Actions.IconDropdown.Container.PaddingBottom.XS} {Actions.IconDropdown.Container.PaddingLeft.XS}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "SM": {
            "value": "{Actions.IconDropdown.Container.PaddingTop.SM} {Actions.IconDropdown.Container.PaddingRight.SM} {Actions.IconDropdown.Container.PaddingBottom.SM} {Actions.IconDropdown.Container.PaddingLeft.SM}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "MD": {
            "value": "{Actions.IconDropdown.Container.PaddingTop.MD} {Actions.IconDropdown.Container.PaddingRight.MD} {Actions.IconDropdown.Container.PaddingBottom.MD} {Actions.IconDropdown.Container.PaddingLeft.MD}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "LG": {
            "value": "{Actions.IconDropdown.Container.PaddingTop.LG} {Actions.IconDropdown.Container.PaddingRight.LG} {Actions.IconDropdown.Container.PaddingBottom.LG} {Actions.IconDropdown.Container.PaddingLeft.LG}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          },
          "XL": {
            "value": "{Actions.IconDropdown.Container.PaddingTop.XL} {Actions.IconDropdown.Container.PaddingRight.XL} {Actions.IconDropdown.Container.PaddingBottom.XL} {Actions.IconDropdown.Container.PaddingLeft.XL}",
            "type": "spacing",
            "description": "Do not apply in Figma, use aliases instead."
          }
        },
        "ItemSpacing": {
          "XS": {
            "value": "0",
            "type": "spacing"
          },
          "SM": {
            "value": "0",
            "type": "spacing"
          },
          "MD": {
            "value": "0",
            "type": "spacing"
          },
          "LG": {
            "value": "-{core.dimensionREM.2}",
            "type": "spacing"
          },
          "XL": {
            "value": "-{core.dimensionREM.4}",
            "type": "spacing"
          }
        },
        "BorderRadius": {
          "XS": {
            "value": "{Actions.Container.BorderRadius.XS}",
            "type": "borderRadius"
          },
          "SM": {
            "value": "{Actions.Container.BorderRadius.SM}",
            "type": "borderRadius"
          },
          "MD": {
            "value": "{Actions.Container.BorderRadius.MD}",
            "type": "borderRadius"
          },
          "LG": {
            "value": "{Actions.Container.BorderRadius.LG}",
            "type": "borderRadius"
          },
          "XL": {
            "value": "{Actions.Container.BorderRadius.XL}",
            "type": "borderRadius"
          }
        }
      }
    }
  },
  "Feedback": {
    "Loader": {
      "Container": {
        "Size": {
          "SM": {
            "value": "{core.dimensionREM.16}",
            "type": "sizing"
          },
          "MD": {
            "value": "{core.dimensionREM.24}",
            "type": "sizing"
          },
          "LG": {
            "value": "{core.dimensionREM.32}",
            "type": "sizing"
          }
        },
        "Padding": {
          "SM": {
            "value": "{core.dimensionREM.1}",
            "type": "spacing"
          },
          "MD": {
            "value": "{core.dimensionREM.2}",
            "type": "spacing"
          },
          "LG": {
            "value": "{core.dimensionREM.3}",
            "type": "spacing"
          }
        }
      },
      "Background": {
        "BorderWidth": {
          "SM": {
            "value": "{core.dimensionPX.2}",
            "type": "borderWidth"
          },
          "MD": {
            "value": "{core.dimensionPX.2}",
            "type": "borderWidth"
          },
          "LG": {
            "value": "{core.dimensionPX.3}",
            "type": "borderWidth"
          }
        }
      },
      "Foreground": {
        "BorderWidth": {
          "SM": {
            "value": "{core.dimensionPX.2}",
            "type": "borderWidth"
          },
          "MD": {
            "value": "{core.dimensionPX.2}",
            "type": "borderWidth"
          },
          "LG": {
            "value": "{core.dimensionPX.3}",
            "type": "borderWidth"
          }
        }
      }
    },
    "Counter": {
      "Container": {
        "PaddingTopBottom": {
          "SM": {
            "value": "{core.dimensionPX.0}",
            "type": "spacing",
            "description": "Figma Only! Do not apply on codes comps. Use <Padding> instead"
          },
          "MD": {
            "value": "{Feedback.Counter.Container.PaddingTopBottom.SM}",
            "type": "spacing",
            "description": "Figma Only! Do not apply on codes comps. Use <Padding> instead"
          },
          "LG": {
            "value": "{Feedback.Counter.Container.PaddingTopBottom.SM}",
            "type": "spacing",
            "description": "Figma Only! Do not apply on codes comps. Use <Padding> instead"
          }
        },
        "PaddingLeftRight": {
          "SM": {
            "value": "{core.dimensionPX.4}",
            "type": "spacing",
            "description": "Figma Only! Do not apply on codes comps. Use <Padding> instead"
          },
          "MD": {
            "value": "{Feedback.Counter.Container.PaddingLeftRight.SM}",
            "type": "spacing",
            "description": "Figma Only! Do not apply on codes comps. Use <Padding> instead"
          },
          "LG": {
            "value": "{Feedback.Counter.Container.PaddingLeftRight.SM}",
            "type": "spacing",
            "description": "Figma Only! Do not apply on codes comps. Use <Padding> instead"
          }
        },
        "Padding": {
          "SM": {
            "value": "{Feedback.Counter.Container.PaddingTopBottom.SM} {Feedback.Counter.Container.PaddingLeftRight.SM}",
            "type": "spacing",
            "description": "Coded Comps Only!"
          },
          "MD": {
            "value": "{Feedback.Counter.Container.PaddingTopBottom.MD} {Feedback.Counter.Container.PaddingLeftRight.MD}",
            "type": "spacing",
            "description": "Coded Comps Only!"
          },
          "LG": {
            "value": "{Feedback.Counter.Container.PaddingTopBottom.LG} {Feedback.Counter.Container.PaddingLeftRight.LG}",
            "type": "spacing",
            "description": "Coded Comps Only!"
          }
        },
        "BorderRadius": {
          "SM": {
            "value": "{core.borderRadius.MD}",
            "type": "borderRadius",
            "description": "Border radius of counter container\n>>> new"
          },
          "MD": {
            "value": "{core.borderRadius.MD}",
            "type": "borderRadius",
            "description": "Border radius of counter container\n>>> Feedback.Counter.BorderRadius"
          },
          "LG": {
            "value": "{core.borderRadius.MD}",
            "type": "borderRadius",
            "description": "Border radius of counter container\n>>> new"
          }
        },
        "BorderWidth": {
          "SM": {
            "value": "{core.borderWidth.Medium}",
            "type": "borderWidth"
          },
          "MD": {
            "value": "{core.borderWidth.Medium}",
            "type": "borderWidth"
          },
          "LG": {
            "value": "{core.borderWidth.Medium}",
            "type": "borderWidth"
          }
        },
        "ItemSpacing": {
          "SM": {
            "value": "{core.dimensionPX.2}",
            "type": "spacing"
          },
          "MD": {
            "value": "{core.dimensionPX.2}",
            "type": "spacing"
          },
          "LG": {
            "value": "{core.dimensionPX.2}",
            "type": "spacing"
          }
        }
      }
    },
    "Tooltip": {
      "ContentCol": {
        "Padding": {
          "value": "{core.dimensionPX.6} {core.dimensionPX.8}",
          "type": "spacing"
        },
        "BorderRadius": {
          "value": "{core.borderRadius.MD}",
          "type": "borderRadius"
        }
      },
      "NoseWrapper": {
        "PaddingTopBottom": {
          "value": "{core.dimensionREM.5}",
          "type": "spacing",
          "description": "Apply on tooltips where the nose is either left or right. The pading defines the inset of the nose."
        },
        "PaddingLeftRight": {
          "value": "{core.dimensionREM.8}",
          "type": "spacing",
          "description": "Apply on tooltips where the nose is either top or bottom. The pading defines the inset of the nose."
        }
      },
      "MinWidth": {
        "value": "{core.dimensionREM.40}",
        "type": "sizing",
        "description": "Defines the minimum width of the tooltip."
      },
      "MaxWidth": {
        "value": "{core.dimensionREM.80}",
        "type": "sizing",
        "description": "Defines the maximum Width of the tooltip."
      }
    },
    "Dialog": {
      "XS": {
        "MaxWidth": {
          "value": "400px",
          "type": "sizing"
        },
        "Padding": {
          "value": "{core.dimensionPX.64}",
          "type": "spacing",
          "description": "Defines the margin of Dialog Combined"
        }
      },
      "SM": {
        "MaxWidth": {
          "value": "600px",
          "type": "sizing"
        },
        "Padding": {
          "value": "{core.dimensionPX.64}",
          "type": "spacing",
          "description": "Defines the margin of Dialog Combined"
        }
      },
      "MD": {
        "MaxWidth": {
          "value": "900px",
          "type": "sizing"
        },
        "Padding": {
          "value": "{core.dimensionPX.64}",
          "type": "spacing",
          "description": "Defines the margin of Dialog Combined"
        }
      },
      "LG": {
        "MaxWidth": {
          "value": "1200px",
          "type": "sizing"
        },
        "Padding": {
          "value": "{core.dimensionPX.64}",
          "type": "spacing",
          "description": "Defines the margin of Dialog Combined"
        }
      },
      "XL": {
        "MaxWidth": {
          "value": "1556px",
          "type": "sizing"
        },
        "Padding": {
          "value": "{core.dimensionPX.64}",
          "type": "spacing",
          "description": "Defines the margin of Dialog Combined"
        }
      },
      "Header": {
        "Padding": {
          "value": "{core.dimensionPX.16}",
          "type": "spacing"
        }
      },
      "Content": {
        "Padding": {
          "value": "{core.dimensionPX.8} {core.dimensionPX.16}",
          "type": "spacing"
        }
      },
      "Footer": {
        "Padding": {
          "value": "{core.dimensionPX.8}",
          "type": "spacing"
        }
      },
      "BorderRadius": {
        "value": "{core.borderRadius.LG}",
        "type": "borderRadius"
      }
    }
  },
  "Forms": {
    "Checkbox": {
      "ContentCol": {
        "ItemSpacing": {
          "SM": {
            "value": "{core.dimensionPX.0}",
            "type": "spacing",
            "description": "Controls the vertical spacing between LabelNextToControl and the Caption."
          },
          "MD": {
            "value": "{core.dimensionPX.0}",
            "type": "spacing",
            "description": "Controls the vertical spacing between LabelNextToControl and the Caption."
          },
          "LG": {
            "value": "{core.dimensionPX.0}",
            "type": "spacing",
            "description": "Controls the vertical spacing between LabelNextToControl and the Caption."
          }
        },
        "PaddingTop": {
          "SM": {
            "value": "{core.dimensionREM.0}",
            "type": "spacing",
            "description": "Can be used to verticaly align the Content of the TextContainer against the Control"
          },
          "MD": {
            "value": "{core.dimensionREM.0}",
            "type": "spacing",
            "description": "Can be used to verticaly align the Content of the TextContainer against the Control"
          },
          "LG": {
            "value": "{core.dimensionREM.0}",
            "type": "spacing",
            "description": "Can be used to verticaly align the Content of the TextContainer against the Control"
          }
        }
      },
      "ContentRow": {
        "ItemSpacing": {
          "SM": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing",
            "description": "Controls the horizontal spacing between the Control and the Label"
          },
          "MD": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing",
            "description": "Controls the horizontal spacing between the Control and the Label"
          },
          "LG": {
            "value": "{core.dimensionPX.12}",
            "type": "spacing",
            "description": "Controls the horizontal spacing between the Control and the Label"
          }
        }
      },
      "ControlWrapper": {
        "PaddingTop": {
          "SM": {
            "value": "0",
            "type": "spacing",
            "description": "Can be used to align the checkbox control against the text"
          },
          "MD": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing",
            "description": "Can be used to align the checkbox control against the text"
          },
          "LG": {
            "value": "{core.dimensionREM.2}",
            "type": "spacing",
            "description": "Can be used to align the checkbox control against the text"
          }
        }
      },
      "Control": {
        "Container": {
          "BorderWidth": {
            "SM": {
              "Active": {
                "Rest": {
                  "value": "{core.dimensionPX.0}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Hover": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Pressed": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Focus": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Disabled": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "ReadOnly": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Error": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                }
              },
              "Inactive": {
                "Rest": {
                  "value": "{core.dimensionPX.1}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Hover": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Pressed": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Focus": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Disabled": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "ReadOnly": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Error": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.SM.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                }
              }
            },
            "MD": {
              "Active": {
                "Rest": {
                  "value": "{core.dimensionPX.0}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Hover": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Pressed": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Focus": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Disabled": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "ReadOnly": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Error": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                }
              },
              "Inactive": {
                "Rest": {
                  "value": "{core.dimensionPX.1}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Hover": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Pressed": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Focus": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Disabled": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "ReadOnly": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Error": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.MD.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                }
              }
            },
            "LG": {
              "Active": {
                "Rest": {
                  "value": "{core.dimensionPX.0}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Hover": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Pressed": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Focus": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Disabled": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "ReadOnly": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Error": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Active.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                }
              },
              "Inactive": {
                "Rest": {
                  "value": "{core.dimensionPX.1}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Hover": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Pressed": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Focus": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Disabled": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "ReadOnly": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                },
                "Error": {
                  "value": "{Forms.Checkbox.Control.Container.BorderWidth.LG.Inactive.Rest}",
                  "type": "borderWidth",
                  "description": "Figma Only! Do not apply on codes comps"
                }
              }
            }
          },
          "BorderRadius": {
            "SM": {
              "value": "{core.borderRadius.SM}",
              "type": "borderRadius"
            },
            "MD": {
              "value": "{Forms.Checkbox.Control.Container.BorderRadius.SM}",
              "type": "borderRadius"
            },
            "LG": {
              "value": "{Forms.Checkbox.Control.Container.BorderRadius.SM}",
              "type": "borderRadius"
            }
          },
          "Size": {
            "SM": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "MD": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "LG": {
              "value": "{core.dimensionPX.20}",
              "type": "sizing"
            }
          }
        },
        "Icon": {
          "IconSize": {
            "SM": {
              "Rest": {
                "value": "{core.dimensionPX.16}",
                "type": "sizing"
              },
              "Hover": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.SM.Rest}",
                "type": "sizing"
              },
              "Pressed": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.SM.Rest}",
                "type": "sizing"
              },
              "Focus": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.SM.Rest}",
                "type": "sizing"
              },
              "Disabled": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.SM.Rest}",
                "type": "sizing"
              },
              "ReadOnly": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.SM.Rest}",
                "type": "sizing"
              },
              "Error": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.SM.Rest}",
                "type": "sizing"
              }
            },
            "MD": {
              "Rest": {
                "value": "{core.dimensionPX.16}",
                "type": "sizing"
              },
              "Hover": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.MD.Rest}",
                "type": "sizing"
              },
              "Pressed": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.MD.Rest}",
                "type": "sizing"
              },
              "Focus": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.MD.Rest}",
                "type": "sizing"
              },
              "Disabled": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.MD.Rest}",
                "type": "sizing"
              },
              "ReadOnly": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.MD.Rest}",
                "type": "sizing"
              },
              "Error": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.MD.Rest}",
                "type": "sizing"
              }
            },
            "LG": {
              "Rest": {
                "value": "{core.dimensionPX.20}",
                "type": "sizing"
              },
              "Hover": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.LG.Rest}",
                "type": "sizing"
              },
              "Pressed": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.LG.Rest}",
                "type": "sizing"
              },
              "Focus": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.LG.Rest}",
                "type": "sizing"
              },
              "Disabled": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.LG.Rest}",
                "type": "sizing"
              },
              "ReadOnly": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.LG.Rest}",
                "type": "sizing"
              },
              "Error": {
                "value": "{Forms.Checkbox.Control.Icon.IconSize.LG.Rest}",
                "type": "sizing"
              }
            }
          }
        }
      }
    },
    "Radio": {
      "Control": {
        "Background": {
          "Unselected": {
            "Rest": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "Hover": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "Pressed": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "Focus": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "Disabled": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "ReadOnly": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "Error": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            }
          },
          "Selected": {
            "Rest": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "Hover": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "Pressed": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "Focus": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "Disabled": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            },
            "ReadOnly": {
              "value": "{core.dimensionPX.16}",
              "type": "sizing"
            }
          }
        },
        "Foreground": {
          "Unselected": {
            "Rest": {
              "value": "{core.dimensionPX.14}",
              "type": "sizing"
            },
            "Hover": {
              "value": "{core.dimensionPX.14}",
              "type": "sizing"
            },
            "Pressed": {
              "value": "{core.dimensionPX.14}",
              "type": "sizing"
            },
            "Focus": {
              "value": "{core.dimensionPX.14}",
              "type": "sizing"
            },
            "Disabled": {
              "value": "{core.dimensionPX.14}",
              "type": "sizing"
            },
            "ReadOnly": {
              "value": "{core.dimensionPX.14}",
              "type": "sizing"
            },
            "Error": {
              "value": "{core.dimensionPX.14}",
              "type": "sizing"
            }
          },
          "Selected": {
            "Rest": {
              "value": "{core.dimensionPX.6}",
              "type": "sizing"
            },
            "Hover": {
              "value": "{core.dimensionPX.8}",
              "type": "sizing"
            },
            "Pressed": {
              "value": "{core.dimensionPX.10}",
              "type": "sizing"
            },
            "Focus": {
              "value": "{core.dimensionPX.6}",
              "type": "sizing"
            },
            "Disabled": {
              "value": "{core.dimensionPX.6}",
              "type": "sizing"
            },
            "ReadOnly": {
              "value": "{core.dimensionPX.6}",
              "type": "sizing"
            }
          }
        },
        "Unselected": {
          "Rest": {
            "value": {
              "color": "{Forms.Radio.Control.Background.Unselected.Fill.Rest}",
              "width": "{core.dimensionPX.1}",
              "style": "solid"
            },
            "type": "border"
          },
          "Hover": {
            "value": {
              "color": "{Forms.Radio.Control.Background.Unselected.Fill.Hover}",
              "width": "{core.dimensionPX.1}",
              "style": "solid"
            },
            "type": "border"
          },
          "Pressed": {
            "value": {
              "color": "{Forms.Radio.Control.Background.Unselected.Fill.Pressed}",
              "width": "{core.dimensionPX.1}",
              "style": "solid"
            },
            "type": "border"
          },
          "Focus": {
            "value": {
              "color": "{Forms.Radio.Control.Background.Unselected.Fill.Focus}",
              "width": "{core.dimensionPX.1}",
              "style": "solid"
            },
            "type": "border"
          },
          "Disabled": {
            "value": {
              "color": "{Forms.Radio.Control.Background.Unselected.Fill.Disabled}",
              "width": "{core.dimensionPX.1}",
              "style": "solid"
            },
            "type": "border"
          },
          "ReadOnly": {
            "value": {
              "color": "{Forms.Radio.Control.Background.Unselected.Fill.ReadOnly}",
              "width": "{core.dimensionPX.1}",
              "style": "solid"
            },
            "type": "border"
          },
          "Error": {
            "value": {
              "color": "{Forms.Radio.Control.Background.Unselected.Fill.Error}",
              "width": "{core.dimensionPX.1}",
              "style": "solid"
            },
            "type": "border"
          }
        }
      },
      "ControlBorderRadius": {
        "value": "{core.borderRadius.Round}",
        "type": "borderRadius"
      },
      "SM": {
        "ContentCol": {
          "ItemSpacing": {
            "value": "{core.dimensionPX.0}",
            "type": "spacing",
            "description": "Controls the vertical spacing between LabelNextToControl and the Caption.\nApplied on: TextContainer"
          },
          "PaddingTop": {
            "value": "{core.dimensionREM.0}",
            "type": "spacing",
            "description": "Can be used to verticaly align the Content of the TextContainer against the Control"
          }
        },
        "ContentRow": {
          "ItemSpacing": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing",
            "description": "Controls the horizontal spacing between the Control and the Label; applied to <ControlLabelContainer>"
          },
          "Padding": {
            "value": "{core.dimensionREM.8} 0",
            "type": "spacing"
          }
        },
        "ControlWrapper": {
          "TopMargin": {
            "value": "{core.dimensionREM.0}",
            "type": "spacing",
            "description": "Can be used to align the checkbox control against the text"
          }
        }
      },
      "MD": {
        "ContentCol": {
          "ItemSpacing": {
            "value": "{core.dimensionPX.0}",
            "type": "spacing",
            "description": "Controls the vertical spacing between LabelNextToControl and the Caption.\nApplied on: TextContainer"
          },
          "PaddingTop": {
            "value": "{core.dimensionREM.0}",
            "type": "spacing",
            "description": "Can be used to verticaly align the Content of the TextContainer against the Control"
          }
        },
        "ContentRow": {
          "ItemSpacing": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing",
            "description": "Controls the horizontal spacing between the Control and the Label; applied to <ControlLabelContainer>"
          },
          "Padding": {
            "value": "{core.dimensionREM.8} 0",
            "type": "spacing"
          }
        },
        "ControlWrapper": {
          "TopMargin": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing",
            "description": "Can be used to align the checkbox control against the text"
          }
        }
      },
      "LG": {
        "ContentCol": {
          "ItemSpacing": {
            "value": "{core.dimensionPX.0}",
            "type": "spacing",
            "description": "Controls the vertical spacing between LabelNextToControl and the Caption.\nApplied on: TextContainer"
          },
          "PaddingTop": {
            "value": "{core.dimensionREM.0}",
            "type": "spacing",
            "description": "Can be used to verticaly align the Content of the TextContainer against the Control"
          }
        },
        "ContentRow": {
          "ItemSpacing": {
            "value": "{core.dimensionPX.12}",
            "type": "spacing",
            "description": "Controls the horizontal spacing between the Control and the Label; applied to <ControlLabelContainer>"
          },
          "Padding": {
            "value": "{core.dimensionREM.8} 0",
            "type": "spacing"
          }
        },
        "ControlWrapper": {
          "TopMargin": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing",
            "description": "Can be used to align the checkbox control against the text"
          }
        }
      }
    },
    "RadioGroup": {
      "SM": {
        "CaptionContainer": {
          "ItemSpacing": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing"
          },
          "PaddingTop": {
            "value": "{core.dimensionREM.16}",
            "type": "spacing"
          }
        },
        "LegendWrapper": {
          "PaddingBottom": {
            "value": "{core.dimensionREM.16}",
            "type": "spacing",
            "description": "Defines the space between Legend and RadioStack. Apply on RadioGroup/LegendWrapper as bottom-padding."
          }
        },
        "RadioStack": {
          "Horizontal": {
            "ItemSpacing": {
              "value": "{core.dimensionREM.16}",
              "type": "spacing",
              "description": "Defines the gap between each Radio Option inside <RadioStack>"
            }
          },
          "Vertical": {
            "ItemSpacing": {
              "value": "{core.dimensionREM.8}",
              "type": "spacing",
              "description": "Defines the gap between each Radio Option inside <RadioStack>"
            }
          }
        }
      },
      "MD": {
        "CaptionContainer": {
          "ItemSpacing": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing"
          },
          "PaddingTop": {
            "value": "{core.dimensionREM.16}",
            "type": "spacing"
          }
        },
        "LegendWrapper": {
          "PaddingBottom": {
            "value": "{core.dimensionREM.16}",
            "type": "spacing",
            "description": "Defines the space between Legend and RadioStack. Apply on RadioGroup/LegendWrapper as bottom-padding."
          }
        },
        "RadioStack": {
          "Horizontal": {
            "ItemSpacing": {
              "value": "{core.dimensionREM.16}",
              "type": "spacing",
              "description": "Defines the gap between each Radio Option inside <RadioStack>"
            }
          },
          "Vertical": {
            "ItemSpacing": {
              "value": "{core.dimensionREM.8}",
              "type": "spacing",
              "description": "Defines the gap between each Radio Option inside <RadioStack>"
            }
          }
        }
      },
      "LG": {
        "CaptionContainer": {
          "ItemSpacing": {
            "value": "{core.dimensionREM.4}",
            "type": "spacing"
          },
          "PaddingTop": {
            "value": "{core.dimensionREM.16}",
            "type": "spacing"
          }
        },
        "LegendWrapper": {
          "PaddingBottom": {
            "value": "{core.dimensionREM.16}",
            "type": "spacing",
            "description": "Defines the space between Legend and RadioStack. Apply on RadioGroup/LegendWrapper as bottom-padding."
          }
        },
        "RadioStack": {
          "Horizontal": {
            "ItemSpacing": {
              "value": "{core.dimensionREM.16}",
              "type": "spacing",
              "description": "Defines the gap between each Radio Option inside <RadioStack>"
            }
          },
          "Vertical": {
            "ItemSpacing": {
              "value": "{core.dimensionREM.8}",
              "type": "spacing",
              "description": "Defines the gap between each Radio Option inside <RadioStack>"
            }
          }
        }
      }
    },
    "Select": {
      "SM": {
        "IconPaddingRight": {
          "value": "{core.dimensionPX.12}",
          "type": "spacing"
        }
      },
      "MD": {
        "IconPaddingRight": {
          "value": "{core.dimensionPX.12}",
          "type": "spacing"
        }
      },
      "LG": {
        "IconPaddingRight": {
          "value": "{core.dimensionPX.16}",
          "type": "spacing"
        }
      }
    },
    "TextArea": {
      "SM": {
        "MinHeight": {
          "value": "{core.dimensionREM.64}",
          "type": "sizing"
        }
      },
      "MD": {
        "MinHeight": {
          "value": "{core.dimensionREM.80}",
          "type": "sizing"
        }
      },
      "LG": {
        "MinHeight": {
          "value": "{core.dimensionREM.112}",
          "type": "sizing"
        }
      }
    },
    "ToggleSwitch": {
      "A11yOffBorderRadius": {
        "value": "{core.borderRadius.Round}",
        "type": "borderRadius"
      },
      "Control": {
        "SM": {
          "A11yIcon": {
            "Sizing": {
              "value": "{core.dimensionREM.16}",
              "type": "sizing"
            }
          },
          "Knob": {
            "Sizing": {
              "value": "{core.dimensionREM.16}",
              "type": "sizing"
            }
          },
          "Background": {
            "Width": {
              "value": "2.25rem",
              "type": "sizing"
            },
            "Height": {
              "value": "{core.dimensionREM.20}",
              "type": "sizing"
            },
            "Padding": {
              "value": "{core.dimensionPX.2}",
              "type": "spacing"
            }
          },
          "IconContainer": {
            "PaddingLeftRight": {
              "value": "{core.dimensionREM.2}",
              "type": "spacing"
            }
          },
          "LabelGap": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing"
          }
        },
        "MD": {
          "A11yIcon": {
            "Sizing": {
              "value": "{core.dimensionREM.16}",
              "type": "sizing"
            }
          },
          "Knob": {
            "Sizing": {
              "value": "{core.dimensionREM.20}",
              "type": "sizing"
            }
          },
          "Background": {
            "Width": {
              "value": "2.75rem",
              "type": "sizing"
            },
            "Height": {
              "value": "{core.dimensionREM.24}",
              "type": "sizing"
            },
            "Padding": {
              "value": "{core.dimensionPX.2}",
              "type": "spacing"
            }
          },
          "IconContainer": {
            "PaddingLeftRight": {
              "value": "{core.dimensionREM.2}",
              "type": "spacing"
            }
          },
          "LabelGap": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing"
          }
        },
        "LG": {
          "Background": {
            "Padding": {
              "value": "{core.dimensionPX.2}",
              "type": "spacing"
            },
            "Width": {
              "value": "3.25rem",
              "type": "sizing"
            },
            "Height": {
              "value": "{core.dimensionREM.28}",
              "type": "sizing"
            }
          },
          "A11yIcon": {
            "Sizing": {
              "value": "{core.dimensionREM.16}",
              "type": "sizing"
            }
          },
          "Knob": {
            "Sizing": {
              "value": "{core.dimensionREM.24}",
              "type": "sizing"
            }
          },
          "IconContainer": {
            "PaddingLeftRight": {
              "value": "0.21875rem",
              "type": "spacing"
            }
          },
          "LabelGap": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing"
          }
        }
      },
      "SM": {
        "Gap": {
          "value": "{core.dimensionREM.8}",
          "type": "spacing"
        },
        "ContentColGap": {
          "value": "{core.dimensionREM.0}",
          "type": "spacing"
        }
      },
      "MD": {
        "Gap": {
          "value": "{core.dimensionREM.8}",
          "type": "spacing"
        },
        "ContentColGap": {
          "value": "{core.dimensionREM.0}",
          "type": "spacing"
        }
      },
      "LG": {
        "Gap": {
          "value": "{core.dimensionREM.8}",
          "type": "spacing"
        },
        "ContentColGap": {
          "value": "{core.dimensionREM.0}",
          "type": "spacing"
        }
      }
    },
    "Slider": {
      "Thumb": {
        "Border": {
          "Rest": {
            "value": {
              "color": "{Forms.Slider.Thumb.Stroke.Rest}",
              "width": "{core.dimensionPX.2}",
              "style": "solid"
            },
            "type": "border"
          },
          "Hover": {
            "value": {
              "color": "{Forms.Slider.Thumb.Stroke.Hover}",
              "width": "{core.dimensionPX.4}",
              "style": "solid"
            },
            "type": "border"
          },
          "Pressed": {
            "value": {
              "color": "{Forms.Slider.Thumb.Stroke.Pressed}",
              "width": "{core.dimensionPX.4}",
              "style": "solid"
            },
            "type": "border"
          },
          "Focus": {
            "value": {
              "color": "{Forms.Slider.Thumb.Stroke.Focus}",
              "width": "{core.dimensionPX.2}",
              "style": "solid"
            },
            "type": "border"
          },
          "Disabled": {
            "value": {
              "color": "{Forms.Slider.Thumb.Stroke.Disabled}",
              "width": "{core.dimensionPX.2}",
              "style": "solid"
            },
            "type": "border"
          },
          "ReadOnly": {
            "value": {
              "color": "{Forms.Slider.Thumb.Stroke.ReadOnly}",
              "width": "{core.dimensionPX.2}",
              "style": "solid"
            },
            "type": "border"
          },
          "Error": {
            "value": {
              "color": "{Forms.Slider.Thumb.Stroke.Error}",
              "width": "{core.dimensionPX.2}",
              "style": "solid"
            },
            "type": "border"
          }
        },
        "Sizing": {
          "Rest": {
            "value": "{core.dimensionPX.14}",
            "type": "sizing"
          },
          "Hover": {
            "value": "{core.dimensionPX.20}",
            "type": "sizing"
          },
          "Pressed": {
            "value": "{core.dimensionPX.20}",
            "type": "sizing"
          },
          "Focus": {
            "value": "{core.dimensionPX.14}",
            "type": "sizing"
          },
          "Disabled": {
            "value": "{core.dimensionPX.14}",
            "type": "sizing"
          },
          "Readonly": {
            "value": "{core.dimensionPX.14}",
            "type": "sizing"
          }
        }
      },
      "Track": {
        "Border": {
          "Active": {
            "Default": {
              "value": {
                "color": "{Forms.Slider.Track.Stroke.Active.Default}",
                "width": "{core.dimensionPX.4}",
                "style": "solid"
              },
              "type": "border"
            },
            "Mute": {
              "value": {
                "color": "{Forms.Slider.Track.Stroke.Active.Mute}",
                "width": "{core.dimensionPX.4}",
                "style": "solid"
              },
              "type": "border"
            }
          },
          "Inactive": {
            "Default": {
              "value": {
                "color": "{Forms.Slider.Track.Stroke.Inactive.Default}",
                "width": "{core.dimensionPX.4}",
                "style": "solid"
              },
              "type": "border"
            },
            "Mute": {
              "value": {
                "color": "{Forms.Slider.Track.Stroke.Inactive.Mute}",
                "width": "{core.dimensionPX.4}",
                "style": "solid"
              },
              "type": "border"
            }
          }
        }
      },
      "TickMark": {
        "Border": {
          "Active": {
            "Default": {
              "value": {
                "color": "{Forms.Slider.TickMark.Stroke.Active.Default}",
                "width": "{core.dimensionPX.1}",
                "style": "solid"
              },
              "type": "border"
            },
            "Mute": {
              "value": {
                "color": "{Forms.Slider.TickMark.Stroke.Active.Mute}",
                "width": "{core.dimensionPX.1}",
                "style": "solid"
              },
              "type": "border"
            }
          },
          "Inactive": {
            "Default": {
              "value": {
                "color": "{Forms.Slider.TickMark.Stroke.Inactive.Default}",
                "width": "{core.dimensionPX.1}1",
                "style": "solid"
              },
              "type": "border"
            },
            "Mute": {
              "value": {
                "color": "{Forms.Slider.TickMark.Stroke.Inactive.Mute}",
                "width": "{core.dimensionPX.1}",
                "style": "solid"
              },
              "type": "border"
            }
          }
        },
        "Sizing": {
          "value": "{core.dimensionPX.6}",
          "type": "sizing"
        }
      },
      "Legend": {
        "Typography": {
          "value": "{core.typography.sourceSansPro.regular.75}",
          "type": "typography"
        }
      }
    },
    "NumberInput": {
      "Input": {
        "TextContainer": {
          "ItemSpacing": {
            "SM": {
              "value": "{core.dimensionPX.4}",
              "type": "spacing"
            },
            "MD": {
              "value": "{core.dimensionPX.4}",
              "type": "spacing",
              "description": "Defines spacing between Prefix, UserInputText and Suffix"
            },
            "LG": {
              "value": "{core.dimensionPX.4}",
              "type": "spacing",
              "description": "Defines spacing between Prefix, UserInputText and Suffix"
            }
          }
        }
      }
    }
  },
  "UI": {
    "Icon": {
      "Container": {
        "Size": {
          "XXS": {
            "value": "{core.dimensionREM.8}",
            "type": "sizing",
            "description": "size of XXS icon\n>>>: UI.Icon.XXS"
          },
          "XS": {
            "value": "{core.dimensionREM.12}",
            "type": "sizing",
            "description": "size of XS icon\n>>> UI.Icon.XS"
          },
          "SM": {
            "value": "{core.dimensionREM.16}",
            "type": "sizing",
            "description": "size of SM icon\n>>> UI.Icon.SM\n"
          },
          "MD": {
            "value": "{core.dimensionREM.24}",
            "type": "sizing",
            "description": "size of MD icon\n>>> UI.Icon.MD"
          },
          "LG": {
            "value": "{core.dimensionREM.32}",
            "type": "sizing",
            "description": "size of LG icon\n>>> UI.Icon.LG"
          },
          "XL": {
            "value": "{core.dimensionREM.48}",
            "type": "sizing",
            "description": "size of XL icon\n>>> UI.Icon.XL"
          }
        }
      }
    },
    "ButtonGroup": {
      "Container": {
        "ItemSpacing": {
          "XS": {
            "value": "{core.dimensionPX.4}",
            "type": "spacing"
          },
          "SM": {
            "value": "{core.dimensionPX.4}",
            "type": "spacing"
          },
          "MD": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing"
          },
          "LG": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing"
          },
          "XL": {
            "value": "{core.dimensionPX.8}",
            "type": "spacing"
          }
        }
      }
    },
    "Divider": {
      "Container": {
        "Horizontal": {
          "Height": {
            "value": "{core.dimensionPX.1}",
            "type": "sizing",
            "description": "The thickness of the divider\n>>> new"
          }
        },
        "Vertical": {
          "Width": {
            "value": "{UI.Divider.Container.Horizontal.Height}",
            "type": "sizing",
            "description": "The thickness of the divider\n>>> new"
          }
        }
      }
    }
  },
  "Navigation": {
    "TabBar": {
      "Tab": {
        "SM": {
          "HighlightLine": {
            "Height": {
              "value": "{core.dimensionPX.2}",
              "type": "sizing",
              "description": "Defines the thickness of the highlight line.\nApply on <HighlightLine>"
            }
          },
          "ContentCol": {
            "TopPadding": {
              "value": "{core.dimensionREM.4}",
              "type": "spacing",
              "description": "Defines the topPadding of a tab; Apply on <ContentCol>"
            },
            "ItemSpacing": {
              "value": "{core.dimensionREM.8}",
              "type": "spacing",
              "description": "Defines the gap beteen the tabs label/icon and the <HighlightLIne>"
            }
          },
          "ContentRow": {
            "PaddingLeftRight": {
              "value": "{core.dimensionPX.12}",
              "type": "spacing",
              "description": "Defines the padding left and right of <ContentRow>"
            },
            "ItemSpacing": {
              "value": "{core.dimensionPX.2}",
              "type": "spacing",
              "description": "Defines the gap between the icon and the label of a tab. Apply on <ContentRow>"
            }
          },
          "Icon": {
            "Sizing": {
              "value": "{core.dimensionREM.12}",
              "type": "sizing",
              "description": "Defines height and width of the icon of a tab"
            }
          }
        },
        "MD": {
          "HighlightLine": {
            "Height": {
              "value": "{core.dimensionPX.2}",
              "type": "sizing",
              "description": "Defines the thickness of the highlight line.\nApply on <HighlightLine>"
            }
          },
          "ContentCol": {
            "TopPadding": {
              "value": "{core.dimensionREM.8}",
              "type": "spacing",
              "description": "Defines the topPadding of a tab; Apply on <ContentCol>"
            },
            "ItemSpacing": {
              "value": "{core.dimensionREM.8}",
              "type": "spacing",
              "description": "Defines the gap beteen the tabs label/icon and the <HighlightLIne>"
            }
          },
          "ContentRow": {
            "PaddingLeftRight": {
              "value": "{core.dimensionPX.16}",
              "type": "spacing",
              "description": "Defines the padding left and right of <ContentRow>"
            },
            "ItemSpacing": {
              "value": "{core.dimensionPX.2}",
              "type": "spacing",
              "description": "Defines the gap between the icon and the label of a tab. Apply on <ContentRow>"
            }
          },
          "Icon": {
            "Sizing": {
              "value": "{core.dimensionREM.16}",
              "type": "sizing",
              "description": "Defines height and width of the icon of a tab"
            }
          }
        },
        "LG": {
          "HighlightLine": {
            "Height": {
              "value": "{core.dimensionPX.2}",
              "type": "sizing",
              "description": "Defines the thickness of the highlight line.\nApply on <HighlightLine>"
            }
          },
          "ContentCol": {
            "TopPadding": {
              "value": "{core.dimensionREM.8}",
              "type": "spacing",
              "description": "Defines the topPadding of a tab; Apply on <ContentCol>"
            },
            "ItemSpacing": {
              "value": "{core.dimensionREM.8}",
              "type": "spacing",
              "description": "Defines the gap beteen the tabs label/icon and the <HighlightLIne>"
            }
          },
          "ContentRow": {
            "PaddingLeftRight": {
              "value": "{core.dimensionPX.16}",
              "type": "spacing",
              "description": "Defines the padding left and right of <ContentRow>"
            },
            "ItemSpacing": {
              "value": "{core.dimensionPX.4}",
              "type": "spacing",
              "description": "Defines the gap between the icon and the label of a tab. Apply on <ContentRow>"
            }
          },
          "Icon": {
            "Sizing": {
              "value": "{core.dimensionREM.16}",
              "type": "sizing",
              "description": "Defines height and width of the icon of a tab"
            }
          }
        }
      },
      "ButtonWrapper": {
        "SM": {
          "Leading": {
            "Padding": {
              "value": "0 {core.dimensionREM.8} 0 0",
              "type": "spacing",
              "description": "Defines the padding of the left/leading buttons wrapper; Apply on <ButtonWrapper>"
            }
          },
          "Trailing": {
            "Padding": {
              "value": "0 0 0 {core.dimensionREM.8}",
              "type": "spacing",
              "description": "Defines the padding of the right/trailing buttons wrapper; Apply on <ButtonWrapper>"
            }
          }
        },
        "MD": {
          "Leading": {
            "Padding": {
              "value": "0 {core.dimensionREM.8} 0 0",
              "type": "spacing",
              "description": "Defines the padding of the left/leading buttons wrapper; Apply on <ButtonWrapper>"
            }
          },
          "Trailing": {
            "Padding": {
              "value": "0 0 0 {core.dimensionREM.8}",
              "type": "spacing",
              "description": "Defines the padding of the right/trailing buttons wrapper; Apply on <ButtonWrapper>"
            }
          }
        },
        "LG": {
          "Leading": {
            "Padding": {
              "value": "0 {core.dimensionREM.12}",
              "type": "spacing",
              "description": "Defines the padding of the left/leading buttons wrapper; Apply on <ButtonWrapper>"
            }
          },
          "Trailing": {
            "Padding": {
              "value": "0 0 0 {core.dimensionREM.12}",
              "type": "spacing",
              "description": "Defines the padding of the right/trailing buttons wrapper; Apply on <ButtonWrapper>"
            }
          }
        }
      }
    }
  }
}